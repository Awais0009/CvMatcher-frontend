{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Safely format a date field that might be a Date object or string\n */\nexport function formatDate(date: Date | string | undefined): string {\n  if (!date) return \"N/A\";\n\n  try {\n    const dateObj = date instanceof Date ? date : new Date(date);\n    return dateObj.toLocaleDateString();\n  } catch (error) {\n    console.warn(\"Error formatting date:\", date, error);\n    return \"Invalid Date\";\n  }\n}\n\n/**\n * Safely format a date field with custom options\n */\nexport function formatDateWithOptions(\n  date: Date | string | undefined,\n  options?: Intl.DateTimeFormatOptions\n): string {\n  if (!date) return \"N/A\";\n\n  try {\n    const dateObj = date instanceof Date ? date : new Date(date);\n    return dateObj.toLocaleDateString(undefined, options);\n  } catch (error) {\n    console.warn(\"Error formatting date:\", date, error);\n    return \"Invalid Date\";\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAKO,SAAS,WAAW,IAA+B;IACxD,IAAI,CAAC,MAAM,OAAO;IAElB,IAAI;QACF,MAAM,UAAU,gBAAgB,OAAO,OAAO,IAAI,KAAK;QACvD,OAAO,QAAQ,kBAAkB;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,0BAA0B,MAAM;QAC7C,OAAO;IACT;AACF;AAKO,SAAS,sBACd,IAA+B,EAC/B,OAAoC;IAEpC,IAAI,CAAC,MAAM,OAAO;IAElB,IAAI;QACF,MAAM,UAAU,gBAAgB,OAAO,OAAO,IAAI,KAAK;QACvD,OAAO,QAAQ,kBAAkB,CAAC,WAAW;IAC/C,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,0BAA0B,MAAM;QAC7C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/toast.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n} "],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;;;;;;;AAEA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/hooks/use-toast.ts"],"sourcesContent":["'use client';\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast } "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/toaster.tsx"],"sourcesContent":["'use client';\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/hooks/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAQA;;;AAVA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } "],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/progress.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress } "],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'secondary' | 'destructive' | 'outline'\n}\n\nfunction Badge({ className, variant = 'default', ...props }: BadgeProps) {\n  const baseClasses = \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\n  \n  const variantClasses = {\n    default: \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n    secondary: \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n    destructive: \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n    outline: \"text-foreground\",\n  }\n\n  return (\n    <div \n      className={cn(baseClasses, variantClasses[variant], className)} \n      {...props} \n    />\n  )\n}\n\nexport { Badge }\n"],"names":[],"mappings":";;;;AACA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,GAAG,OAAmB;IACrE,MAAM,cAAc;IAEpB,MAAM,iBAAiB;QACrB,SAAS;QACT,WAAW;QACX,aAAa;QACb,SAAS;IACX;IAEA,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa,cAAc,CAAC,QAAQ,EAAE;QACnD,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/lib/storage.ts"],"sourcesContent":["/**\n * Client-side persistent storage utility using localStorage with JSON serialization\n * Provides a simple database-like interface for persistent data storage\n */\n\nexport class LocalStorage {\n  private prefix: string;\n\n  constructor(prefix: string = 'job-matcher') {\n    this.prefix = prefix;\n  }\n  private getKey(collection: string): string {\n    return `${this.prefix}:${collection}`;\n  }\n  // Convert date strings back to Date objects for known date fields\n  private convertDates<T>(items: T[]): T[] {\n    const dateFields = ['created_at', 'updated_at', 'upload_date', 'processed_at', 'completed_at'];\n    \n    return items.map(item => {\n      if (typeof item === 'object' && item !== null) {\n        const convertedItem = { ...item } as any;\n        \n        dateFields.forEach(field => {\n          if (convertedItem[field] && typeof convertedItem[field] === 'string') {\n            try {\n              convertedItem[field] = new Date(convertedItem[field]);\n            } catch (error) {\n              console.warn(`Failed to convert ${field} to Date:`, convertedItem[field]);\n            }\n          }\n        });\n        \n        return convertedItem;\n      }\n      return item;\n    });\n  }\n\n  // Get all items from a collection\n  getCollection<T>(collection: string): T[] {\n    try {\n      const data = localStorage.getItem(this.getKey(collection));\n      const items = data ? JSON.parse(data) : [];\n      return this.convertDates(items);\n    } catch (error) {\n      console.error(`Error reading collection ${collection}:`, error);\n      return [];\n    }\n  }\n\n  // Set entire collection\n  setCollection<T>(collection: string, items: T[]): void {\n    try {\n      localStorage.setItem(this.getKey(collection), JSON.stringify(items));\n    } catch (error) {\n      console.error(`Error writing collection ${collection}:`, error);\n    }\n  }\n  // Add item to collection\n  addToCollection<T extends { id: string; created_at?: Date; updated_at?: Date }>(collection: string, item: T): T {\n    const items = this.getCollection<T>(collection);\n    const newItem = {\n      ...item,\n      created_at: item.created_at || new Date(),\n      updated_at: new Date()\n    } as T;\n    items.push(newItem);\n    this.setCollection(collection, items);\n    return newItem;\n  }\n\n  // Update item in collection\n  updateInCollection<T extends { id: string }>(\n    collection: string, \n    id: string, \n    updates: Partial<T>\n  ): T | null {\n    const items = this.getCollection<T>(collection);\n    const index = items.findIndex(item => item.id === id);\n    \n    if (index === -1) return null;\n    \n    items[index] = {\n      ...items[index],\n      ...updates,\n      updated_at: new Date()\n    } as T;\n    \n    this.setCollection(collection, items);\n    return items[index];\n  }\n  // Remove item from collection\n  removeFromCollection<T extends { id: string }>(collection: string, id: string): boolean {\n    const items = this.getCollection<T>(collection);\n    const initialLength = items.length;\n    const filteredItems = items.filter(item => item.id !== id);\n    \n    if (filteredItems.length !== initialLength) {\n      this.setCollection(collection, filteredItems);\n      return true;\n    }\n    return false;\n  }\n\n  // Get item by ID from collection\n  getFromCollection<T extends { id: string }>(collection: string, id: string): T | null {\n    const items = this.getCollection<T>(collection);\n    return items.find(item => item.id === id) || null;\n  }\n\n  // Search items in collection\n  searchCollection<T>(\n    collection: string, \n    predicate: (item: T) => boolean\n  ): T[] {\n    const items = this.getCollection<T>(collection);\n    return items.filter(predicate);\n  }\n\n  // Clear entire collection\n  clearCollection(collection: string): void {\n    localStorage.removeItem(this.getKey(collection));\n  }\n\n  // Initialize collections with default data if empty\n  initializeCollection<T>(collection: string, defaultData: T[]): void {\n    const existing = this.getCollection(collection);\n    if (existing.length === 0) {\n      this.setCollection(collection, defaultData);\n    }\n  }\n\n  // Get collection size\n  getCollectionSize(collection: string): number {\n    return this.getCollection(collection).length;\n  }\n\n  // Check if collection exists and has data\n  hasData(collection: string): boolean {\n    return this.getCollectionSize(collection) > 0;\n  }\n}\n\n// Export a default instance\nexport const storage = new LocalStorage();\n\n// Collection names constants\nexport const COLLECTIONS = {\n  COMPANIES: 'companies',\n  USERS: 'users',\n  JOBS: 'jobs',\n  CANDIDATES: 'candidates',\n  JOB_MATCHES: 'job_matches',\n  BATCH_UPLOADS: 'batch_uploads',\n  BATCH_CANDIDATES: 'batch_candidates',\n  AI_PROCESSING_QUEUE: 'ai_processing_queue',\n  AUDIT_LOGS: 'audit_logs',\n  SAVED_SEARCHES: 'saved_searches',\n  CANDIDATE_TAGS: 'candidate_tags',\n  PROCESSING_METRICS: 'processing_metrics',\n  CANDIDATE_STATUS_HISTORY: 'candidate_status_history',\n  CANDIDATE_COMMENTS: 'candidate_comments',\n  API_USAGE: 'api_usage'\n} as const;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 836, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/services/candidateService.ts"],"sourcesContent":["import { Candidate } from '@/types/index';\nimport { storage, COLLECTIONS } from '@/lib/storage';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const candidateService = {\n  async getAll(): Promise<Candidate[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const candidates = storage.getCollection<Candidate>(COLLECTIONS.CANDIDATES);\n        resolve(candidates);\n      }, 100);\n    });\n  },\n\n  async getById(id: string): Promise<Candidate | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const candidate = storage.getFromCollection<Candidate>(COLLECTIONS.CANDIDATES, id);\n        resolve(candidate);\n      }, 100);\n    });\n  },\n\n  async create(candidate: Omit<Candidate, 'id' | 'created_at' | 'updated_at'>): Promise<Candidate> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const newCandidate: Candidate = {\n          ...candidate,\n          id: uuidv4(),\n          created_at: new Date(),\n          updated_at: new Date()\n        };\n        storage.addToCollection(COLLECTIONS.CANDIDATES, newCandidate);\n        resolve(newCandidate);\n      }, 200);\n    });\n  },\n\n  async update(id: string, updates: Partial<Candidate>): Promise<Candidate | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const updatedCandidate = storage.updateInCollection<Candidate>(\n          COLLECTIONS.CANDIDATES,\n          id,\n          updates\n        );\n        resolve(updatedCandidate);\n      }, 200);\n    });\n  },\n\n  async delete(id: string): Promise<boolean> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const deleted = storage.removeFromCollection<Candidate>(COLLECTIONS.CANDIDATES, id);\n        resolve(deleted);\n      }, 200);\n    });\n  },\n\n  async search(query: {\n    keywords?: string[];\n    email?: string;\n    phone?: string;\n  }): Promise<Candidate[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        let candidates = storage.getCollection<Candidate>(COLLECTIONS.CANDIDATES);\n\n        if (query.keywords && query.keywords.length > 0) {\n          candidates = candidates.filter(candidate => \n            query.keywords!.some(keyword => \n              candidate.full_name.toLowerCase().includes(keyword.toLowerCase()) ||\n              candidate.email.toLowerCase().includes(keyword.toLowerCase())\n            )\n          );\n        }\n\n        if (query.email) {\n          candidates = candidates.filter(candidate => \n            candidate.email.toLowerCase().includes(query.email!.toLowerCase())\n          );\n        }\n\n        if (query.phone) {\n          candidates = candidates.filter(candidate => \n            candidate.phone?.includes(query.phone!)\n          );\n        }\n\n        resolve(candidates);\n      }, 300);\n    });\n  }\n};"],"names":[],"mappings":";;;AACA;AACA;;;AAEO,MAAM,mBAAmB;IAC9B,MAAM;QACJ,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,aAAa,wHAAA,CAAA,UAAO,CAAC,aAAa,CAAY,wHAAA,CAAA,cAAW,CAAC,UAAU;gBAC1E,QAAQ;YACV,GAAG;QACL;IACF;IAEA,MAAM,SAAQ,EAAU;QACtB,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,YAAY,wHAAA,CAAA,UAAO,CAAC,iBAAiB,CAAY,wHAAA,CAAA,cAAW,CAAC,UAAU,EAAE;gBAC/E,QAAQ;YACV,GAAG;QACL;IACF;IAEA,MAAM,QAAO,SAA8D;QACzE,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,eAA0B;oBAC9B,GAAG,SAAS;oBACZ,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;oBACT,YAAY,IAAI;oBAChB,YAAY,IAAI;gBAClB;gBACA,wHAAA,CAAA,UAAO,CAAC,eAAe,CAAC,wHAAA,CAAA,cAAW,CAAC,UAAU,EAAE;gBAChD,QAAQ;YACV,GAAG;QACL;IACF;IAEA,MAAM,QAAO,EAAU,EAAE,OAA2B;QAClD,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,mBAAmB,wHAAA,CAAA,UAAO,CAAC,kBAAkB,CACjD,wHAAA,CAAA,cAAW,CAAC,UAAU,EACtB,IACA;gBAEF,QAAQ;YACV,GAAG;QACL;IACF;IAEA,MAAM,QAAO,EAAU;QACrB,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,UAAU,wHAAA,CAAA,UAAO,CAAC,oBAAoB,CAAY,wHAAA,CAAA,cAAW,CAAC,UAAU,EAAE;gBAChF,QAAQ;YACV,GAAG;QACL;IACF;IAEA,MAAM,QAAO,KAIZ;QACC,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,IAAI,aAAa,wHAAA,CAAA,UAAO,CAAC,aAAa,CAAY,wHAAA,CAAA,cAAW,CAAC,UAAU;gBAExE,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,MAAM,GAAG,GAAG;oBAC/C,aAAa,WAAW,MAAM,CAAC,CAAA,YAC7B,MAAM,QAAQ,CAAE,IAAI,CAAC,CAAA,UACnB,UAAU,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC,QAAQ,WAAW,OAC9D,UAAU,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,QAAQ,WAAW;gBAGhE;gBAEA,IAAI,MAAM,KAAK,EAAE;oBACf,aAAa,WAAW,MAAM,CAAC,CAAA,YAC7B,UAAU,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,KAAK,CAAE,WAAW;gBAEnE;gBAEA,IAAI,MAAM,KAAK,EAAE;oBACf,aAAa,WAAW,MAAM,CAAC,CAAA,YAC7B,UAAU,KAAK,EAAE,SAAS,MAAM,KAAK;gBAEzC;gBAEA,QAAQ;YACV,GAAG;QACL;IACF;AACF","debugId":null}},
    {"offset": {"line": 917, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/services/jobMatchService.ts"],"sourcesContent":["import { JobMatch, JobMatchStatus, Job, Candidate } from '@/types';\nimport { storage, COLLECTIONS } from '@/lib/storage';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype ChangeListener = () => void;\n\nexport const jobMatchService = {\n  _subscribers: new Set<ChangeListener>(),\n\n  subscribe(listener: ChangeListener): () => void {\n    this._subscribers.add(listener);\n    return () => this._subscribers.delete(listener);\n  },\n\n  _notifySubscribers(): void {\n    this._subscribers.forEach(listener => listener());\n  },\n  async getJobMatches(jobId?: string): Promise<JobMatch[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        let matches = storage.getCollection<JobMatch>(COLLECTIONS.JOB_MATCHES);\n        \n        if (jobId) {\n          matches = matches.filter(match => match.job_id === jobId);\n        }\n        \n        const jobs = storage.getCollection<Job>(COLLECTIONS.JOBS);\n        const candidates = storage.getCollection<Candidate>(COLLECTIONS.CANDIDATES);\n        \n        const matchesWithRelations = matches\n          .map(match => ({\n            ...match,\n            job: jobs.find(j => j.id === match.job_id),\n            candidate: candidates.find(c => c.id === match.candidate_id)\n          }))\n          .sort((a, b) => (b.score || 0) - (a.score || 0));\n\n        console.log('Matches with relations:', matchesWithRelations);\n        \n        resolve(matchesWithRelations);\n      }, 500);\n    });\n  },\n\n  async getCandidateMatches(candidateId: string): Promise<JobMatch[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const matches = storage.searchCollection<JobMatch>(\n          COLLECTIONS.JOB_MATCHES,\n          match => match.candidate_id === candidateId\n        );\n        \n        const jobs = storage.getCollection<Job>(COLLECTIONS.JOBS);\n        const candidates = storage.getCollection<Candidate>(COLLECTIONS.CANDIDATES);\n        \n        const matchesWithRelations = matches.map(match => ({\n          ...match,\n          job: jobs.find(j => j.id === match.job_id),\n          candidate: candidates.find(c => c.id === match.candidate_id)\n        }));\n        \n        resolve(matchesWithRelations);\n      }, 500);\n    });\n  },\n  async updateMatchStatus(matchId: string, status: JobMatchStatus): Promise<JobMatch | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const updatedMatch = storage.updateInCollection<JobMatch>(\n          COLLECTIONS.JOB_MATCHES,\n          matchId,\n          { status }\n        );\n        this._notifySubscribers();\n        resolve(updatedMatch);\n      }, 500);\n    });\n  },\n\n  async calculateMatchScore(jobId: string, candidateId: string): Promise<JobMatch> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        // Simulate AI matching logic\n        const score = Math.random() * 0.5 + 0.5; // Random score between 0.5 and 1.0\n        const analysis = {\n          skills_match: Math.random() * 0.3 + 0.7,\n          experience_match: Math.random() * 0.3 + 0.7,\n          education_match: Math.random() * 0.3 + 0.7,\n          salary_expectations: Math.random() * 0.3 + 0.7\n        };\n\n        const match: JobMatch = {\n          id: uuidv4(),\n          job_id: jobId,\n          candidate_id: candidateId,\n          status: 'applied',\n          score,\n          analysis,\n          created_at: new Date(),\n          updated_at: new Date()\n        };\n\n        storage.addToCollection(COLLECTIONS.JOB_MATCHES, match);\n        resolve(match);\n      }, 1000);\n    });\n  },\n\n  async createMatch(jobId: string, candidateId: string, status: JobMatchStatus = 'applied'): Promise<JobMatch> {\n    return new Promise((resolve) => {\n      setTimeout(() => {        const match: JobMatch = {\n          id: uuidv4(),\n          job_id: jobId,\n          candidate_id: candidateId,\n          status,\n          created_at: new Date(),\n          updated_at: new Date()\n        };\n\n        storage.addToCollection(COLLECTIONS.JOB_MATCHES, match);\n        this._notifySubscribers();\n        resolve(match);\n      }, 200);\n    });\n  },\n\n  async deleteMatch(matchId: string): Promise<boolean> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const deleted = storage.removeFromCollection<JobMatch>(COLLECTIONS.JOB_MATCHES, matchId);\n        resolve(deleted);\n      }, 200);\n    });\n  },\n  async bulkCreateMatches(jobId: string, candidateIds: string[]): Promise<JobMatch[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {        \n        const matches = candidateIds.map(candidateId => {\n            const score = Math.random() * 0.5 + 0.5; // Random score between 0.5 and 1.0\n            const analysis = {\n            skills_match: Math.random() * 0.3 + 0.7,\n            experience_match: Math.random() * 0.3 + 0.7,\n            education_match: Math.random() * 0.3 + 0.7,\n            salary_expectations: Math.random() * 0.3 + 0.7\n            };\n\n            const match: JobMatch = {\n            id: uuidv4(),\n            job_id: jobId,\n            candidate_id: candidateId,\n            status: 'applied',\n            score,\n            analysis,\n            created_at: new Date(),\n            updated_at: new Date(),\n            ai_summary: `Based on the analysis, this candidate shows strong potential for this role with a ${(score * 100).toFixed(0)}% match. Key strengths include relevant skills and experience alignment.`\n            };\n          \n          storage.addToCollection(COLLECTIONS.JOB_MATCHES, match);\n          return match;\n        });\n        \n        this._notifySubscribers();\n        resolve(matches);\n      }, 500);\n    });\n  }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1069, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/services/batchUploadService.ts"],"sourcesContent":["import { BatchUpload, BatchCandidate, BatchUploadSummary, ProcessingStatus, Job, User, Candidate } from '@/types';\nimport { storage, COLLECTIONS } from '@/lib/storage';\nimport { candidateService } from './candidateService';\nimport { jobMatchService } from './jobMatchService';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const batchUploadService = {\n  async getAllBatchUploads(): Promise<BatchUpload[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const batchUploads = storage.getCollection<BatchUpload>(COLLECTIONS.BATCH_UPLOADS);\n        const jobs = storage.getCollection<Job>(COLLECTIONS.JOBS);\n        const users = storage.getCollection<User>(COLLECTIONS.USERS);\n        \n        const uploadsWithRelations = batchUploads.map(upload => ({\n          ...upload,\n          job: jobs.find(j => j.id === upload.job_id),\n          uploader: users.find(u => u.id === upload.uploaded_by)\n        }));\n        \n        resolve(uploadsWithRelations);\n      }, 100);\n    });\n  },\n\n  async getBatchUploadById(id: string): Promise<BatchUpload | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const upload = storage.getFromCollection<BatchUpload>(COLLECTIONS.BATCH_UPLOADS, id);\n        if (upload) {\n          const jobs = storage.getCollection<Job>(COLLECTIONS.JOBS);\n          const users = storage.getCollection<User>(COLLECTIONS.USERS);\n          const batchCandidates = storage.searchCollection<BatchCandidate>(\n            COLLECTIONS.BATCH_CANDIDATES,\n            candidate => candidate.batch_upload_id === id\n          );\n          \n          const uploadWithRelations = {\n            ...upload,\n            job: jobs.find(j => j.id === upload.job_id),\n            uploader: users.find(u => u.id === upload.uploaded_by),\n            batch_candidates: batchCandidates\n          };\n          \n          resolve(uploadWithRelations);\n        } else {\n          resolve(null);\n        }\n      }, 100);\n    });\n  },\n  async getBatchUploadsByJob(jobId: string): Promise<BatchUpload[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const batchUploads = storage.searchCollection<BatchUpload>(\n          COLLECTIONS.BATCH_UPLOADS,\n          upload => upload.job_id === jobId\n        );\n        \n        const jobs = storage.getCollection<Job>(COLLECTIONS.JOBS);\n        const users = storage.getCollection<User>(COLLECTIONS.USERS);\n        \n        const uploadsWithRelations = batchUploads.map(upload => ({\n          ...upload,\n          job: jobs.find(j => j.id === upload.job_id),\n          uploader: users.find(u => u.id === upload.uploaded_by)\n        }));\n        \n        resolve(uploadsWithRelations);\n      }, 100);\n    });\n  },\n\n  async getBatchUploads(companyId: string, jobId?: string): Promise<BatchUpload[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        let batchUploads = storage.searchCollection<BatchUpload>(\n          COLLECTIONS.BATCH_UPLOADS,\n          upload => upload.company_id === companyId\n        );\n        \n        // Filter by job if specified\n        if (jobId) {\n          batchUploads = batchUploads.filter(upload => upload.job_id === jobId);\n        }\n        \n        const jobs = storage.getCollection<Job>(COLLECTIONS.JOBS);\n        const users = storage.getCollection<User>(COLLECTIONS.USERS);\n        \n        const uploadsWithRelations = batchUploads.map(upload => ({\n          ...upload,\n          job: jobs.find(j => j.id === upload.job_id),\n          uploader: users.find(u => u.id === upload.uploaded_by)\n        }));\n        \n        resolve(uploadsWithRelations);\n      }, 100);\n    });\n  },  \n  \n  async createBatchUpload(\n    companyId: string,\n    jobId: string,\n    fileName: string,\n    uploadedBy: string,\n    fileSize?: number\n  ): Promise<BatchUpload> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const newUpload: BatchUpload = {\n          id: uuidv4(),\n          company_id: companyId,\n          job_id: jobId,\n          file_name: fileName,\n          file_size: fileSize,\n          uploaded_by: uploadedBy,\n          status: 'pending',\n          total_candidates: 0,\n          processed_candidates: 0,\n          successful_candidates: 0,\n          failed_candidates: 0,\n          created_at: new Date(),\n          updated_at: new Date()\n        };\n        \n        // Determine candidate count based on file type\n        let candidateCount = 1;\n        if (fileName.endsWith('.zip')) {\n          candidateCount = Math.floor(Math.random() * 5) + 3; // 3-7 candidates\n        } else if (fileName.endsWith('.csv') || fileName.endsWith('.xlsx')) {\n          candidateCount = Math.floor(Math.random() * 10) + 5; // 5-14 candidates\n        }\n        \n        newUpload.total_candidates = candidateCount;\n        \n        storage.addToCollection(COLLECTIONS.BATCH_UPLOADS, newUpload);\n        \n        // Notify subscribers of the new upload\n        this._notifySubscribers();\n\n        // Start simulation process\n        this._simulateUploadProcess(newUpload.id, candidateCount, fileName);\n        \n        resolve(newUpload);\n      }, 200);\n    });\n  },\n\n  _simulateUploadProcess(uploadId: string, candidateCount: number, fileName: string): void {\n    // Step 1: Move to processing after 1 second\n    setTimeout(() => {\n      storage.updateInCollection<BatchUpload>(\n        COLLECTIONS.BATCH_UPLOADS,\n        uploadId,\n        { status: 'processing', updated_at: new Date() }\n      );\n      this._notifySubscribers();\n      \n      // Step 2: Simulate processing individual candidates\n      this._simulateCandidateProcessing(uploadId, candidateCount, fileName);\n    }, 1000);\n  },\n  _simulateCandidateProcessing(uploadId: string, candidateCount: number, fileName: string): void {\n    let processedCount = 0;\n    let successfulCount = 0;\n    const createdCandidateIds: string[] = [];\n    \n    const processInterval = setInterval(async () => {\n      processedCount++;\n      \n      // Simulate some failures (10% chance)\n      const isSuccess = Math.random() > 0.1;\n      let candidateId: string | undefined;\n      \n      if (isSuccess) {\n        successfulCount++;\n        \n        // Create a real candidate\n        try {\n          const candidateNames = [\n            'Alice Johnson', 'Bob Smith', 'Carol Williams', 'David Brown', 'Emma Davis',\n            'Frank Miller', 'Grace Wilson', 'Henry Moore', 'Ivy Taylor', 'Jack Anderson',\n            'Kate Thompson', 'Liam Garcia', 'Maya Martinez', 'Noah Robinson', 'Olivia Clark',\n            'Paul Rodriguez', 'Quinn Lewis', 'Ruby Lee', 'Sam Walker', 'Tara Hall'\n          ];\n          \n          const skills = [\n            ['JavaScript', 'React', 'Node.js'],\n            ['Python', 'Django', 'PostgreSQL'],\n            ['Java', 'Spring Boot', 'MySQL'],\n            ['C#', '.NET', 'SQL Server'],\n            ['TypeScript', 'Angular', 'MongoDB'],\n            ['PHP', 'Laravel', 'Redis'],\n            ['Go', 'Docker', 'Kubernetes'],\n            ['Rust', 'WebAssembly', 'GraphQL']\n          ];\n          \n          const randomName = candidateNames[Math.floor(Math.random() * candidateNames.length)];\n          const randomSkills = skills[Math.floor(Math.random() * skills.length)];\n          \n          const newCandidate = await candidateService.create({\n            full_name: `${randomName} (Batch ${processedCount})`,\n            email: `${randomName.toLowerCase().replace(' ', '.')}${processedCount}@example.com`,\n            phone: `+1-555-${Math.floor(Math.random() * 9000) + 1000}`,\n            resume_url: fileName.endsWith('.zip') \n              ? `/resumes/dummy.pdf`\n              : `/resumes/dummy.pdf`,\n            skills: randomSkills,\n            experience_years: Math.floor(Math.random() * 10) + 1,\n            is_active: true\n          });\n          \n          candidateId = newCandidate.id;\n          createdCandidateIds.push(candidateId);\n        } catch (error) {\n          console.error('Failed to create candidate:', error);\n          candidateId = undefined;\n        }\n      }\n      \n      // Create a mock batch candidate entry\n      const candidateName = fileName.endsWith('.zip') \n        ? `candidate_${processedCount}.pdf`\n        : fileName.endsWith('.csv') || fileName.endsWith('.xlsx')\n        ? `row_${processedCount}`\n        : fileName;\n        \n      const batchCandidate: BatchCandidate = {\n        id: uuidv4(),\n        batch_upload_id: uploadId,\n        candidate_id: candidateId,\n        file_name: candidateName,\n        status: isSuccess ? 'completed' : 'failed',\n        error_message: isSuccess ? undefined : 'Processing failed',\n        created_at: new Date(),\n        updated_at: new Date()\n      };\n      \n      storage.addToCollection(COLLECTIONS.BATCH_CANDIDATES, batchCandidate);\n      \n      // Update batch upload progress\n      storage.updateInCollection<BatchUpload>(\n        COLLECTIONS.BATCH_UPLOADS,\n        uploadId,\n        {\n          processed_candidates: processedCount,\n          successful_candidates: successfulCount,\n          failed_candidates: processedCount - successfulCount,\n          updated_at: new Date()\n        }\n      );\n      \n      this._notifySubscribers();\n      \n      // Check if processing is complete\n      if (processedCount >= candidateCount) {\n        clearInterval(processInterval);\n        \n        // Final status update and create job matches\n        setTimeout(async () => {\n          storage.updateInCollection<BatchUpload>(\n            COLLECTIONS.BATCH_UPLOADS,\n            uploadId,\n            {\n              status: 'completed',\n              updated_at: new Date()\n            }\n          );\n          \n          // Create job matches for all successful candidates\n          if (createdCandidateIds.length > 0) {\n            try {\n              const batchUpload = storage.getFromCollection<BatchUpload>(COLLECTIONS.BATCH_UPLOADS, uploadId);\n              if (batchUpload?.job_id) {\n                await jobMatchService.bulkCreateMatches(batchUpload.job_id, createdCandidateIds);\n                console.log(`✅ Created ${createdCandidateIds.length} job matches for batch upload ${uploadId}`);\n              }\n            } catch (error) {\n              console.error('Failed to create job matches:', error);\n            }\n          }\n          \n          this._notifySubscribers();\n        }, 500);\n      }\n    }, 800); // Process one candidate every 800ms\n  },\n  async updateBatchUploadStatus(\n    id: string,\n    status: ProcessingStatus,\n    updates?: Partial<BatchUpload>\n  ): Promise<BatchUpload | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const updatedUpload = storage.updateInCollection<BatchUpload>(\n          COLLECTIONS.BATCH_UPLOADS,\n          id,\n          { status, ...updates }\n        );\n        \n        // Notify subscribers of the update\n        this._notifySubscribers();\n        \n        resolve(updatedUpload);\n      }, 100);\n    });\n  },\n\n  async getBatchUploadSummary(companyId: string): Promise<BatchUploadSummary> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const uploads = storage.searchCollection<BatchUpload>(\n          COLLECTIONS.BATCH_UPLOADS,\n          upload => upload.company_id === companyId\n        );\n\n        const summary: BatchUploadSummary = {\n          total_uploads: uploads.length,\n          pending_uploads: uploads.filter(u => u.status === 'pending').length,\n          processing_uploads: uploads.filter(u => u.status === 'processing').length,\n          completed_uploads: uploads.filter(u => u.status === 'completed').length,\n          failed_uploads: uploads.filter(u => u.status === 'failed').length,\n          total_candidates_processed: uploads.reduce((sum, u) => sum + (u.processed_candidates || 0), 0),\n          recent_uploads: uploads\n            .sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\n            .slice(0, 5)\n        };\n\n        resolve(summary);\n      }, 150);\n    });\n  },\n\n  async getBatchCandidates(batchUploadId: string): Promise<BatchCandidate[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const batchCandidates = storage.searchCollection<BatchCandidate>(\n          COLLECTIONS.BATCH_CANDIDATES,\n          candidate => candidate.batch_upload_id === batchUploadId\n        );\n        \n        const candidates = storage.getCollection<Candidate>(COLLECTIONS.CANDIDATES);\n        \n        const candidatesWithRelations = batchCandidates.map(batchCandidate => ({\n          ...batchCandidate,\n          candidate: candidates.find(c => c.id === batchCandidate.candidate_id)\n        }));\n        \n        resolve(candidatesWithRelations);\n      }, 100);\n    });\n  },\n\n  async addBatchCandidate(\n    batchUploadId: string,\n    fileName: string,\n    candidateId?: string\n  ): Promise<BatchCandidate> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const newBatchCandidate: BatchCandidate = {\n          id: uuidv4(),\n          batch_upload_id: batchUploadId,\n          candidate_id: candidateId,\n          file_name: fileName,\n          status: 'pending',\n          created_at: new Date(),\n          updated_at: new Date()\n        };\n        \n        storage.addToCollection(COLLECTIONS.BATCH_CANDIDATES, newBatchCandidate);\n          // Update batch upload totals\n        const upload = storage.getFromCollection<BatchUpload>(COLLECTIONS.BATCH_UPLOADS, batchUploadId);\n        if (upload) {\n          storage.updateInCollection<BatchUpload>(\n            COLLECTIONS.BATCH_UPLOADS,\n            batchUploadId,\n            { total_candidates: (upload.total_candidates || 0) + 1 }\n          );\n        }\n        \n        // Notify subscribers of the update\n        this._notifySubscribers();\n        \n        resolve(newBatchCandidate);\n      }, 100);\n    });\n  },\n\n  async updateBatchCandidateStatus(\n    id: string,\n    status: ProcessingStatus,\n    errorMessage?: string,\n    candidateId?: string\n  ): Promise<BatchCandidate | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const updates: Partial<BatchCandidate> = { status };\n        if (errorMessage) updates.error_message = errorMessage;\n        if (candidateId) updates.candidate_id = candidateId;\n        \n        const updatedCandidate = storage.updateInCollection<BatchCandidate>(\n          COLLECTIONS.BATCH_CANDIDATES,\n          id,\n          updates\n        );\n          if (updatedCandidate) {\n          // Update batch upload counters\n          const upload = storage.getFromCollection<BatchUpload>(\n            COLLECTIONS.BATCH_UPLOADS, \n            updatedCandidate.batch_upload_id\n          );\n          \n          if (upload) {\n            const processed = (upload.processed_candidates || 0) + 1;\n            const successful = status === 'completed' \n              ? (upload.successful_candidates || 0) + 1 \n              : upload.successful_candidates || 0;\n            const failed = status === 'failed' \n              ? (upload.failed_candidates || 0) + 1 \n              : upload.failed_candidates || 0;\n            \n            storage.updateInCollection<BatchUpload>(\n              COLLECTIONS.BATCH_UPLOADS,\n              updatedCandidate.batch_upload_id,\n              { \n                processed_candidates: processed,\n                successful_candidates: successful,\n                failed_candidates: failed\n              }\n            );\n          }\n          \n          // Notify subscribers of the update\n          this._notifySubscribers();\n        }\n        \n        resolve(updatedCandidate);\n      }, 100);\n    });\n  },\n  async deleteBatchUpload(id: string): Promise<boolean> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        // Delete associated batch candidates first\n        const batchCandidates = storage.searchCollection<BatchCandidate>(\n          COLLECTIONS.BATCH_CANDIDATES,\n          candidate => candidate.batch_upload_id === id\n        );\n        \n        batchCandidates.forEach(candidate => {\n          storage.removeFromCollection<BatchCandidate>(COLLECTIONS.BATCH_CANDIDATES, candidate.id);\n        });\n        \n        // Delete the batch upload\n        const deleted = storage.removeFromCollection<BatchUpload>(COLLECTIONS.BATCH_UPLOADS, id);\n        \n        // Notify subscribers of the change\n        this._notifySubscribers();\n        \n        resolve(deleted);\n      }, 200);\n    });  },\n\n  async retryFailedUpload(id: string): Promise<void> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        // Reset the upload to pending status and restart the simulation\n        const upload = storage.getFromCollection<BatchUpload>(COLLECTIONS.BATCH_UPLOADS, id);\n        if (upload) {\n          storage.updateInCollection<BatchUpload>(\n            COLLECTIONS.BATCH_UPLOADS,\n            id,\n            { \n              status: 'pending',\n              processed_candidates: 0,\n              successful_candidates: 0,\n              failed_candidates: 0,\n              updated_at: new Date()\n            }\n          );\n          \n          // Notify subscribers\n          this._notifySubscribers();\n          \n          // Restart the simulation\n          setTimeout(() => {\n            storage.updateInCollection<BatchUpload>(\n              COLLECTIONS.BATCH_UPLOADS,\n              id,\n              { status: 'processing', updated_at: new Date() }\n            );\n            this._notifySubscribers();\n          }, 1000);\n\n          setTimeout(() => {\n            storage.updateInCollection<BatchUpload>(\n              COLLECTIONS.BATCH_UPLOADS,\n              id,\n              { \n                status: 'completed', \n                updated_at: new Date(),\n                processed_candidates: upload.total_candidates || 0,\n                successful_candidates: upload.total_candidates || 0\n              }\n            );\n            this._notifySubscribers();\n          }, 3000);\n        }\n        \n        resolve();\n      }, 100);\n    });\n  },\n\n  async cancelUpload(id: string): Promise<void> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const updatedUpload = storage.updateInCollection<BatchUpload>(\n          COLLECTIONS.BATCH_UPLOADS,\n          id,\n          { \n            status: 'failed',\n            updated_at: new Date(),\n            error_message: 'Upload cancelled by user'\n          }\n        );\n        \n        if (updatedUpload) {\n          // Notify subscribers of the change\n          this._notifySubscribers();\n        }\n        \n        resolve();\n      }, 100);\n    });\n  },\n\n  // Subscription management for real-time updates\n  _subscribers: [] as Array<(uploads: BatchUpload[]) => void>,\n\n  subscribeToUploads(callback: (uploads: BatchUpload[]) => void): () => void {\n    this._subscribers.push(callback);\n    \n    // Immediately send current uploads\n    this.getAllBatchUploads().then(uploads => {\n      callback(uploads);\n    });\n    \n    // Return unsubscribe function\n    return () => {\n      const index = this._subscribers.indexOf(callback);\n      if (index > -1) {\n        this._subscribers.splice(index, 1);\n      }\n    };\n  },\n\n  _notifySubscribers(): void {\n    this.getAllBatchUploads().then(uploads => {\n      this._subscribers.forEach(callback => {\n        try {\n          callback(uploads);\n        } catch (error) {\n          console.error('Error in batch upload subscriber:', error);\n        }\n      });\n    });\n  }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1544, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/candidates/GlobalUploadProgress.tsx"],"sourcesContent":["'use client';\nimport { useEffect, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { Badge } from '@/components/ui/badge';\nimport { batchUploadService } from '@/services/batchUploadService';\nimport { BatchUpload } from '@/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { \n  Clock, \n  CheckCircle, \n  XCircle, \n  AlertCircle, \n  X,\n  Minimize2,\n  Maximize2\n} from 'lucide-react';\n\ninterface GlobalUploadProgressProps {\n  companyId?: string;\n}\n\nexport function GlobalUploadProgress({ companyId = 'company1' }: GlobalUploadProgressProps) {\n  const [uploads, setUploads] = useState<BatchUpload[]>([]);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const { toast } = useToast();\n  useEffect(() => {\n    // Subscribe to real-time updates\n    const unsubscribe = batchUploadService.subscribeToUploads((updatedUploads) => {\n      console.log('GlobalUploadProgress received uploads:', updatedUploads.length, updatedUploads);\n      \n      const activeUploads = updatedUploads.filter(upload => \n        upload.company_id === companyId && \n        (upload.status === 'pending' || upload.status === 'processing')\n      );\n      \n      console.log('Active uploads for company', companyId, ':', activeUploads.length, activeUploads);\n      \n      setUploads(activeUploads);\n      setIsVisible(activeUploads.length > 0);\n      \n      // Show completion notifications\n      // updatedUploads.forEach(upload => {\n      //   if (upload.status === 'completed' && upload.company_id === companyId) {\n      //     toast({\n      //       title: 'Upload Complete',\n      //       description: `${upload.file_name} has been processed successfully.`,\n      //     });\n      //   }\n      // });\n    });\n\n    return unsubscribe;\n  }, [companyId, toast]);\n\n  const handleCancel = async (id: string) => {\n    try {\n      await batchUploadService.cancelUpload(id);\n      toast({\n        title: 'Success',\n        description: 'Upload cancelled',\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to cancel upload',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return CheckCircle;\n      case 'failed':\n        return XCircle;\n      case 'processing':\n        return Clock;\n      default:\n        return AlertCircle;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'text-green-500';\n      case 'failed':\n        return 'text-red-500';\n      case 'processing':\n        return 'text-blue-500';\n      default:\n        return 'text-yellow-500';\n    }\n  };\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 w-96 z-50\">\n      <Card className=\"shadow-lg border-2\">\n        <CardHeader className=\"pb-3\">\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"text-sm font-medium\">\n              Active Uploads ({uploads.length})\n            </CardTitle>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsMinimized(!isMinimized)}\n                className=\"p-1\"\n              >\n                {isMinimized ? <Maximize2 className=\"w-3 h-3\" /> : <Minimize2 className=\"w-3 h-3\" />}\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsVisible(false)}\n                className=\"p-1\"\n              >\n                <X className=\"w-3 h-3\" />\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n        \n        {!isMinimized && (\n          <CardContent className=\"space-y-3 max-h-64 overflow-y-auto\">\n            {uploads.map((upload) => {\n              const StatusIcon = getStatusIcon(upload.status);\n              const progressPercentage = upload.total_candidates \n                ? Math.round((upload.processed_candidates || 0) / upload.total_candidates * 100)\n                : 0;\n\n              return (\n                <div key={upload.id} className=\"p-3 border rounded-lg bg-background\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center space-x-2 flex-1 min-w-0\">\n                      <StatusIcon className={`w-4 h-4 ${getStatusColor(upload.status)}`} />\n                      <span className=\"text-sm font-medium truncate\">{upload.file_name}</span>\n                      <Badge variant=\"secondary\" className=\"text-xs\">\n                        {upload.status}\n                      </Badge>\n                    </div>\n                    \n                    {upload.status === 'processing' && (\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => handleCancel(upload.id)}\n                        className=\"p-1\"\n                      >\n                        <X className=\"w-3 h-3\" />\n                      </Button>\n                    )}\n                  </div>\n\n                  {upload.status === 'processing' && upload.total_candidates && (\n                    <div>\n                      <div className=\"flex items-center justify-between text-xs mb-1\">\n                        <span>Processing candidates...</span>\n                        <span>{upload.processed_candidates || 0}/{upload.total_candidates}</span>\n                      </div>\n                      <Progress value={progressPercentage} className=\"h-2\" />\n                    </div>\n                  )}\n\n                  {upload.status === 'pending' && (\n                    <div className=\"text-xs text-muted-foreground\">\n                      Preparing upload...\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </CardContent>\n        )}\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1891, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/lib/mockData.ts"],"sourcesContent":["import { \n  Company, User, Job, Candidate, JobMatch, AIProcessingQueue, \n  UserActivity, BatchUpload, APIUsage\n} from '@/types/index';\n\n// Utility function to generate UUIDs\nconst generateUUID = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n};\n\n// Mock Companies\nexport const mockCompanies: Company[] = [\n  {\n    id: 'comp-1',\n    name: 'TechCorp Solutions',\n    slug: 'techcorp-solutions',\n    subscription_plan: 'enterprise',\n    max_users: 50,\n    max_jobs_per_month: 100,\n    created_at: new Date('2023-01-15'),\n    updated_at: new Date('2024-01-15'),\n    is_active: true\n  }\n];\n\n// Mock Users\nexport const mockUsers: User[] = [\n  {\n    id: 'user-1',\n    company_id: 'comp-1',\n    email: 'admin@techcorp.com',\n    password_hash: 'hashed_password_1',\n    full_name: 'John Anderson',\n    role: 'admin',\n    created_at: new Date('2023-01-16'),\n    updated_at: new Date('2024-01-16'),\n    is_active: true\n  },\n  {\n    id: 'user-2',\n    company_id: 'comp-1',\n    email: 'recruiter@techcorp.com',\n    password_hash: 'hashed_password_2',\n    full_name: 'Sarah Johnson',\n    role: 'recruiter',\n    created_at: new Date('2023-02-01'),\n    updated_at: new Date('2024-02-01'),\n    is_active: true\n  },\n  {\n    id: 'user-3',\n    company_id: 'comp-2',\n    email: 'admin@startupHub.com',\n    password_hash: 'hashed_password_3',\n    full_name: 'Mike Chen',\n    role: 'admin',\n    created_at: new Date('2023-06-11'),\n    updated_at: new Date('2024-06-11'),\n    is_active: true\n  },\n  {\n    id: 'user-4',\n    company_id: 'comp-2',\n    email: 'recruiter@startupHub.com',\n    password_hash: 'hashed_password_4',\n    full_name: 'Emily Davis',\n    role: 'recruiter',\n    created_at: new Date('2023-07-01'),\n    updated_at: new Date('2024-07-01'),\n    is_active: true\n  },\n  {\n    id: 'user-5',\n    company_id: 'comp-3',\n    email: 'owner@smallbiz.com',\n    password_hash: 'hashed_password_5',\n    full_name: 'David Wilson',\n    role: 'admin',\n    created_at: new Date('2023-09-21'),\n    updated_at: new Date('2024-09-21'),\n    is_active: true\n  }\n];\n\n// Mock Jobs\nexport const mockJobs: Job[] = [\n  {\n    id: 'job-1',\n    company_id: 'comp-1',\n    title: 'Senior Software Engineer',\n    description: 'We are looking for a senior software engineer with 5+ years of experience in React, Node.js, and TypeScript. The ideal candidate will have experience with microservices architecture and cloud platforms.',\n    location: 'San Francisco, CA',\n    employment_type: 'full_time',\n    salary_min: 120000,\n    salary_max: 180000,\n    created_at: new Date('2024-01-10'),\n    updated_at: new Date('2024-01-10'),\n    is_active: true\n  },\n  {\n    id: 'job-2',\n    company_id: 'comp-1',\n    title: 'Product Manager',\n    description: 'Seeking an experienced product manager to lead our enterprise software products. Must have 3+ years of product management experience and strong analytical skills.',\n    location: 'New York, NY',\n    employment_type: 'full_time',\n    salary_min: 100000,\n    salary_max: 140000,\n    created_at: new Date('2024-01-15'),\n    updated_at: new Date('2024-01-15'),\n    is_active: true\n  },\n  {\n    id: 'job-3',\n    company_id: 'comp-2',\n    title: 'Frontend Developer',\n    description: 'Join our startup as a frontend developer! We\\'re looking for someone passionate about creating amazing user experiences with React and modern web technologies.',\n    location: 'Austin, TX',\n    employment_type: 'full_time',\n    salary_min: 80000,\n    salary_max: 110000,\n    created_at: new Date('2024-01-20'),\n    updated_at: new Date('2024-01-20'),\n    is_active: true\n  },\n  {\n    id: 'job-4',\n    company_id: 'comp-2',\n    title: 'DevOps Engineer',\n    description: 'We need a DevOps engineer to help scale our infrastructure. Experience with AWS, Docker, and Kubernetes is required.',\n    location: 'Remote',\n    employment_type: 'contract',\n    salary_min: 90000,\n    salary_max: 130000,\n    created_at: new Date('2024-02-01'),\n    updated_at: new Date('2024-02-01'),\n    is_active: true\n  },\n  {\n    id: 'job-5',\n    company_id: 'comp-3',\n    title: 'Full Stack Developer',\n    description: 'Small but growing company looking for a versatile full stack developer. Must be comfortable with both frontend and backend technologies.',\n    location: 'Denver, CO',\n    employment_type: 'full_time',\n    salary_min: 70000,\n    salary_max: 95000,\n    created_at: new Date('2024-02-10'),\n    updated_at: new Date('2024-02-10'),\n    is_active: true\n  }\n];\n\n// Mock Candidates\nexport const mockCandidates: Candidate[] = [\n  {\n    id: 'cand-1',\n    full_name: 'Alice Thompson',\n    email: 'alice.thompson@email.com',\n    phone: '+1-555-0101',\n    resume_url: '/resumes/alice-thompson.pdf',\n    created_at: new Date('2024-01-05'),\n    updated_at: new Date('2024-01-05'),\n    is_active: true\n  },\n  {\n    id: 'cand-2',\n    full_name: 'Bob Rodriguez',\n    email: 'bob.rodriguez@email.com',\n    phone: '+1-555-0102',\n    resume_url: '/resumes/bob-rodriguez.pdf',\n    created_at: new Date('2024-01-08'),\n    updated_at: new Date('2024-01-08'),\n    is_active: true\n  },\n  {\n    id: 'cand-3',\n    full_name: 'Carol Kim',\n    email: 'carol.kim@email.com',\n    phone: '+1-555-0103',\n    resume_url: '/resumes/carol-kim.pdf',\n    created_at: new Date('2024-01-12'),\n    updated_at: new Date('2024-01-12'),\n    is_active: true\n  },\n  {\n    id: 'cand-4',\n    full_name: 'Daniel Brown',\n    email: 'daniel.brown@email.com',\n    phone: '+1-555-0104',\n    resume_url: '/resumes/daniel-brown.pdf',\n    created_at: new Date('2024-01-18'),\n    updated_at: new Date('2024-01-18'),\n    is_active: true\n  },\n  {\n    id: 'cand-5',\n    full_name: 'Eva Martinez',\n    email: 'eva.martinez@email.com',\n    phone: '+1-555-0105',\n    resume_url: '/resumes/eva-martinez.pdf',\n    created_at: new Date('2024-01-25'),\n    updated_at: new Date('2024-01-25'),\n    is_active: true\n  },\n  {\n    id: 'cand-6',\n    full_name: 'Frank Liu',\n    email: 'frank.liu@email.com',\n    phone: '+1-555-0106',\n    resume_url: '/resumes/frank-liu.pdf',\n    created_at: new Date('2024-02-02'),\n    updated_at: new Date('2024-02-02'),\n    is_active: true\n  }\n];\n\n// Mock Job Matches\nexport const mockJobMatches: JobMatch[] = [\n  {\n    id: 'match-1',\n    job_id: 'job-1',\n    candidate_id: 'cand-1',\n    status: 'interviewing',\n    score: 0.89,\n    analysis: {\n      skills_match: 0.92,\n      experience_match: 0.85,\n      education_match: 0.90,\n      salary_expectations: 0.88\n    },\n    created_at: new Date('2024-01-11'),\n    updated_at: new Date('2024-01-20')\n  },\n  {\n    id: 'match-2',\n    job_id: 'job-1',\n    candidate_id: 'cand-2',\n    status: 'applied',\n    score: 0.76,\n    analysis: {\n      skills_match: 0.80,\n      experience_match: 0.75,\n      education_match: 0.85,\n      salary_expectations: 0.65\n    },\n    created_at: new Date('2024-01-12'),\n    updated_at: new Date('2024-01-12')\n  },\n  {\n    id: 'match-3',\n    job_id: 'job-2',\n    candidate_id: 'cand-3',\n    status: 'applied',\n    score: 0.91,\n    analysis: {\n      skills_match: 0.88,\n      experience_match: 0.95,\n      education_match: 0.92,\n      salary_expectations: 0.90\n    },\n    created_at: new Date('2024-01-16'),\n    updated_at: new Date('2024-02-01')\n  },\n  {\n    id: 'match-4',\n    job_id: 'job-3',\n    candidate_id: 'cand-4',\n    status: 'rejected',\n    score: 0.45,\n    analysis: {\n      skills_match: 0.50,\n      experience_match: 0.30,\n      education_match: 0.60,\n      salary_expectations: 0.40\n    },\n    created_at: new Date('2024-01-21'),\n    updated_at: new Date('2024-01-25')\n  },\n  \n  {\n    id: 'match-5',\n    job_id: 'job-4',\n    candidate_id: 'cand-5',\n    status: 'hired',\n    score: 0.94,\n    analysis: {\n      skills_match: 0.96,\n      experience_match: 0.90,\n      education_match: 0.95,\n      salary_expectations: 0.95\n    },\n    created_at: new Date('2024-02-03'),\n    updated_at: new Date('2024-02-15')\n  }\n];\n\n// Generate additional mock data for other entities\nexport const mockAIProcessingQueue: AIProcessingQueue[] = [\n  {\n    id: 'ai-1',\n    job_id: 'job-1',\n    candidate_id: 'cand-6',\n    status: 'processing',\n    result: null,\n    created_at: new Date('2024-02-20'),\n    updated_at: new Date('2024-02-20')\n  },\n  {\n    id: 'ai-2',\n    job_id: 'job-2',\n    candidate_id: 'cand-4',\n    status: 'completed',\n    result: {\n      match_score: 0.72,\n      processing_time: 1.5,\n      confidence: 0.85\n    },\n    created_at: new Date('2024-02-19'),\n    updated_at: new Date('2024-02-19')\n  }\n];\n\n\nexport const mockBatchUploads: BatchUpload[] = [\n  {\n    id: 'batch-1',\n    company_id: 'comp-1',\n    job_id: 'job-1',\n    file_name: 'resumes_batch_january.zip',\n    status: 'completed',\n    uploaded_by: 'user-2',\n    created_at: new Date('2024-01-15'),\n    updated_at: new Date('2024-01-15')\n  },\n  {\n    id: 'batch-2',\n    company_id: 'comp-2',\n    job_id: 'job-3',\n    file_name: 'candidate_cvs_feb.zip',\n    status: 'processing',\n    uploaded_by: 'user-4',\n    created_at: new Date('2024-02-10'),\n    updated_at: new Date('2024-02-10')\n  }\n];\n\nexport const mockAPIUsage: APIUsage[] = [\n  {\n    id: 'api-1',\n    company_id: 'comp-1',\n    user_id: 'user-1',\n    endpoint: '/api/candidates',\n    request_payload: { query: 'React developer' },\n    response_payload: { results: 15 },\n    status_code: 200,\n    created_at: new Date('2024-02-01')\n  },\n  {\n    id: 'api-2',\n    company_id: 'comp-1',\n    user_id: 'user-2',\n    endpoint: '/api/job-matches',\n    request_payload: { job_id: 'job-1' },\n    response_payload: { matches: 5 },\n    status_code: 200,\n    created_at: new Date('2024-02-01')\n  }\n];"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2270, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/lib/initStorage.ts"],"sourcesContent":["import { storage, COLLECTIONS } from './storage';\nimport { mockJobs, mockCompanies, mockUsers, mockCandidates } from './mockData';\nimport { BatchUpload, BatchCandidate } from '@/types';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Initialize persistent storage with sample data\n * This runs once when the app starts if storage is empty\n */\nexport function initializeStorage() {\n  // Initialize companies\n  if (!storage.hasData(COLLECTIONS.COMPANIES)) {\n    storage.setCollection(COLLECTIONS.COMPANIES, mockCompanies);\n    console.log('Initialized companies data');\n  }\n\n  // Initialize users\n  if (!storage.hasData(COLLECTIONS.USERS)) {\n    storage.setCollection(COLLECTIONS.USERS, mockUsers);\n    console.log('Initialized users data');\n  }\n\n  // Initialize jobs\n  if (!storage.hasData(COLLECTIONS.JOBS)) {\n    storage.setCollection(COLLECTIONS.JOBS, mockJobs);\n    console.log('Initialized jobs data');\n  }\n\n  // Initialize candidates\n  if (!storage.hasData(COLLECTIONS.CANDIDATES)) {\n    storage.setCollection(COLLECTIONS.CANDIDATES, mockCandidates);\n    console.log('Initialized candidates data');\n  }\n\n  // Initialize batch uploads with sample data\n  if (!storage.hasData(COLLECTIONS.BATCH_UPLOADS)) {\n    const sampleBatchUploads: BatchUpload[] = [\n      {\n        id: uuidv4(),\n        company_id: mockCompanies[0]?.id || 'company1',\n        job_id: mockJobs[0]?.id || 'job1',\n        file_name: 'candidates_batch_1.csv',\n        file_size: 2048,\n        status: 'completed',\n        uploaded_by: mockUsers[0]?.id || 'user1',\n        total_candidates: 10,\n        processed_candidates: 10,\n        successful_candidates: 8,\n        failed_candidates: 2,\n        created_at: new Date(Date.now() - 24 * 60 * 60 * 1000), // 1 day ago\n        updated_at: new Date(Date.now() - 23 * 60 * 60 * 1000)\n      },\n      {\n        id: uuidv4(),\n        company_id: mockCompanies[0]?.id || 'company1',\n        job_id: mockJobs[1]?.id || 'job2',\n        file_name: 'resumes_batch_2.zip',\n        file_size: 15360,\n        status: 'failed',\n        uploaded_by: mockUsers[0]?.id || 'user1',\n        total_candidates: 5,\n        processed_candidates: 3,\n        successful_candidates: 2,\n        failed_candidates: 3,\n        error_message: 'Some files could not be processed',\n        created_at: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago\n        updated_at: new Date(Date.now() - 1 * 60 * 60 * 1000)\n      }\n    ];\n    storage.setCollection(COLLECTIONS.BATCH_UPLOADS, sampleBatchUploads);\n    console.log('Initialized batch uploads data');\n  }\n\n  // Initialize batch candidates\n  if (!storage.hasData(COLLECTIONS.BATCH_CANDIDATES)) {\n    const batchUploads = storage.getCollection<BatchUpload>(COLLECTIONS.BATCH_UPLOADS);\n    const sampleBatchCandidates: BatchCandidate[] = [\n      {\n        id: uuidv4(),\n        batch_upload_id: batchUploads[0]?.id || 'batch1',\n        candidate_id: mockCandidates[0]?.id || 'candidate1',\n        file_name: 'john_doe_resume.pdf',\n        status: 'completed',\n        created_at: new Date(Date.now() - 23 * 60 * 60 * 1000),\n        updated_at: new Date(Date.now() - 23 * 60 * 60 * 1000)\n      },\n      {\n        id: uuidv4(),\n        batch_upload_id: batchUploads[0]?.id || 'batch1',\n        candidate_id: mockCandidates[1]?.id || 'candidate2',\n        file_name: 'jane_smith_resume.pdf',\n        status: 'completed',\n        created_at: new Date(Date.now() - 23 * 60 * 60 * 1000),\n        updated_at: new Date(Date.now() - 23 * 60 * 60 * 1000)\n      },\n      {\n        id: uuidv4(),\n        batch_upload_id: batchUploads[1]?.id || 'batch2',\n        file_name: 'corrupted_resume.pdf',\n        status: 'failed',\n        error_message: 'File format not supported',\n        created_at: new Date(Date.now() - 1 * 60 * 60 * 1000),\n        updated_at: new Date(Date.now() - 1 * 60 * 60 * 1000)\n      }\n    ];\n    storage.setCollection(COLLECTIONS.BATCH_CANDIDATES, sampleBatchCandidates);\n    console.log('Initialized batch candidates data');\n  }\n\n  // Initialize other collections as empty arrays\n  const emptyCollections = [\n    COLLECTIONS.JOB_MATCHES,\n    COLLECTIONS.AI_PROCESSING_QUEUE,\n    COLLECTIONS.AUDIT_LOGS,\n    COLLECTIONS.SAVED_SEARCHES,\n    COLLECTIONS.CANDIDATE_TAGS,\n    COLLECTIONS.PROCESSING_METRICS,\n    COLLECTIONS.CANDIDATE_STATUS_HISTORY,\n    COLLECTIONS.CANDIDATE_COMMENTS,\n    COLLECTIONS.API_USAGE\n  ];\n\n  emptyCollections.forEach(collection => {\n    if (!storage.hasData(collection)) {\n      storage.setCollection(collection, []);\n    }\n  });\n\n  console.log('Storage initialization completed');\n}\n\n/**\n * Clear all storage data - useful for development/testing\n */\nexport function clearAllStorage() {\n  Object.values(COLLECTIONS).forEach(collection => {\n    storage.clearCollection(collection);\n  });\n  console.log('All storage data cleared');\n}\n\n/**\n * Get storage statistics\n */\nexport function getStorageStats() {\n  return Object.entries(COLLECTIONS).reduce((stats, [name, collection]) => {\n    stats[name] = storage.getCollectionSize(collection);\n    return stats;\n  }, {} as Record<string, number>);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2415, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/contexts/AppContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { Company, User, Job, Candidate, JobMatch, BatchUpload } from '@/types/index';\nimport { initializeStorage } from '@/lib/initStorage';\n\ninterface AppState {\n  currentUser: User | null;\n  currentCompany: Company | null;\n  jobs: Job[];\n  candidates: Candidate[];\n  matches: JobMatch[];\n  batchUploads: BatchUpload[];\n  loading: boolean;\n  error: string | null;\n  initialized: boolean;\n}\n\ntype AppAction = \n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'SET_INITIALIZED'; payload: boolean }\n  | { type: 'SET_CURRENT_USER'; payload: User | null }\n  | { type: 'SET_CURRENT_COMPANY'; payload: Company | null }\n  | { type: 'SET_JOBS'; payload: Job[] }\n  | { type: 'ADD_JOB'; payload: Job }\n  | { type: 'UPDATE_JOB'; payload: Job }\n  | { type: 'DELETE_JOB'; payload: string }\n  | { type: 'SET_CANDIDATES'; payload: Candidate[] }\n  | { type: 'ADD_CANDIDATE'; payload: Candidate }\n  | { type: 'UPDATE_CANDIDATE'; payload: Candidate }\n  | { type: 'DELETE_CANDIDATE'; payload: string }\n  | { type: 'SET_MATCHES'; payload: JobMatch[] }\n  | { type: 'UPDATE_MATCH'; payload: JobMatch }\n  | { type: 'SET_BATCH_UPLOADS'; payload: BatchUpload[] }\n  | { type: 'ADD_BATCH_UPLOAD'; payload: BatchUpload }\n  | { type: 'UPDATE_BATCH_UPLOAD'; payload: BatchUpload }\n  | { type: 'DELETE_BATCH_UPLOAD'; payload: string };\n\nconst initialState: AppState = {\n  currentUser: null,\n  currentCompany: null,\n  jobs: [],\n  candidates: [],\n  matches: [],\n  batchUploads: [],\n  loading: false,\n  error: null,\n  initialized: false,\n};\n\nfunction appReducer(state: AppState, action: AppAction): AppState {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    case 'SET_INITIALIZED':\n      return { ...state, initialized: action.payload };\n    case 'SET_CURRENT_USER':\n      return { ...state, currentUser: action.payload };\n    case 'SET_CURRENT_COMPANY':\n      return { ...state, currentCompany: action.payload };\n    case 'SET_JOBS':\n      return { ...state, jobs: action.payload };\n    case 'ADD_JOB':\n      return { ...state, jobs: [...state.jobs, action.payload] };\n    case 'UPDATE_JOB':\n      return { \n        ...state, \n        jobs: state.jobs.map(job => job.id === action.payload.id ? action.payload : job) \n      };\n    case 'DELETE_JOB':\n      return { \n        ...state, \n        jobs: state.jobs.filter(job => job.id !== action.payload) \n      };\n    case 'SET_CANDIDATES':\n      return { ...state, candidates: action.payload };\n    case 'ADD_CANDIDATE':\n      return { ...state, candidates: [...state.candidates, action.payload] };\n    case 'UPDATE_CANDIDATE':\n      return { \n        ...state, \n        candidates: state.candidates.map(candidate => \n          candidate.id === action.payload.id ? action.payload : candidate\n        ) \n      };\n    case 'DELETE_CANDIDATE':\n      return { \n        ...state, \n        candidates: state.candidates.filter(candidate => candidate.id !== action.payload) \n      };\n    case 'SET_MATCHES':\n      return { ...state, matches: action.payload };\n    case 'UPDATE_MATCH':\n      return { \n        ...state, \n        matches: state.matches.map(match => \n          match.id === action.payload.id ? action.payload : match\n        ) \n      };\n    case 'SET_BATCH_UPLOADS':\n      return { ...state, batchUploads: action.payload };\n    case 'ADD_BATCH_UPLOAD':\n      return { ...state, batchUploads: [...state.batchUploads, action.payload] };\n    case 'UPDATE_BATCH_UPLOAD':\n      return { \n        ...state, \n        batchUploads: state.batchUploads.map(upload => \n          upload.id === action.payload.id ? action.payload : upload\n        ) \n      };\n    case 'DELETE_BATCH_UPLOAD':\n      return { \n        ...state, \n        batchUploads: state.batchUploads.filter(upload => upload.id !== action.payload) \n      };\n    default:\n      return state;\n  }\n}\n\nconst AppContext = createContext<{\n  state: AppState;\n  dispatch: React.Dispatch<AppAction>;\n} | null>(null);\n\nexport function AppProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Initialize storage on mount\n  useEffect(() => {\n    const initApp = async () => {\n      try {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        \n        // Initialize persistent storage with seed data\n        initializeStorage();\n        \n        // Set a default company and user for the demo\n        const mockUser: User = {\n          id: 'user1',\n          company_id: 'company1',\n          email: 'admin@example.com',\n          password_hash: '',\n          full_name: 'Admin User',\n          role: 'admin',\n          created_at: new Date(),\n          updated_at: new Date(),\n          is_active: true\n        };\n\n        const mockCompany: Company = {\n          id: 'company1',\n          name: 'Demo Company',\n          slug: 'demo-company',\n          subscription_plan: 'professional',\n          max_users: 10,\n          max_jobs_per_month: 50,\n          created_at: new Date(),\n          updated_at: new Date(),\n          is_active: true\n        };\n\n        dispatch({ type: 'SET_CURRENT_USER', payload: mockUser });\n        dispatch({ type: 'SET_CURRENT_COMPANY', payload: mockCompany });\n        dispatch({ type: 'SET_INITIALIZED', payload: true });\n      } catch (error) {\n        console.error('Failed to initialize app:', error);\n        dispatch({ type: 'SET_ERROR', payload: 'Failed to initialize application' });\n      } finally {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    };\n\n    initApp();\n  }, []);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nexport function useAppContext() {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2650, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { useAppContext } from '@/contexts/AppContext';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  User, \n  Users, \n  Briefcase, \n  Upload, \n  Database, \n  Settings, \n  Bell,\n  Search,\n  Menu,\n  X,\n  ChevronDown\n} from 'lucide-react';\n\ninterface NavbarProps {\n  activeSection: string;\n  onSectionChange: (section: string) => void;\n  userRole: 'admin' | 'recruiter' | 'viewer';\n  onRoleChange: (role: 'admin' | 'recruiter' | 'viewer') => void;\n}\n\nexport function Navbar({ activeSection, onSectionChange, userRole, onRoleChange }: NavbarProps) {\n  const { state } = useAppContext();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileDropdownOpen, setIsProfileDropdownOpen] = useState(false);\n\n  const navigationItems = [\n    { \n      id: 'jobs', \n      name: 'Jobs', \n      icon: Briefcase, \n      description: 'Manage job postings',\n      roles: ['admin', 'recruiter', 'viewer'] \n    },\n    { \n      id: 'uploads', \n      name: 'Batch Uploads', \n      icon: Upload, \n      description: 'Upload candidate batches',\n      roles: ['admin', 'recruiter'] \n    },\n    { \n      id: 'users', \n      name: 'Users', \n      icon: Users, \n      description: 'Manage users and permissions',\n      roles: ['admin'] \n    },\n    { \n      id: 'admin', \n      name: 'Database', \n      icon: Database, \n      description: 'Database administration',\n      roles: ['admin'] \n    }\n  ];\n\n  const visibleItems = navigationItems.filter(item => \n    item.roles.includes(userRole)\n  );\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case 'admin': return 'bg-red-100 text-red-800';\n      case 'recruiter': return 'bg-blue-100 text-blue-800';\n      case 'viewer': return 'bg-green-100 text-green-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200 sticky top-0 z-50 shadow-sm\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo and Brand */}\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-shrink-0 flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Briefcase className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-xl font-bold text-gray-900\">Job Matcher</h1>\n                <p className=\"text-xs text-gray-500 hidden sm:block\">AI-Powered Recruitment</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-1\">\n            {visibleItems.map((item) => {\n              const Icon = item.icon;\n              const isActive = activeSection === item.id;\n              \n              return (\n                <button\n                  key={item.id}\n                  onClick={() => onSectionChange(item.id)}\n                  className={`group relative px-4 py-2 rounded-lg font-medium transition-all duration-200 flex items-center space-x-2 ${\n                    isActive\n                      ? 'bg-blue-50 text-blue-700 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                  }`}\n                  title={item.description}\n                >\n                  <Icon className={`w-4 h-4 ${isActive ? 'text-blue-600' : 'text-gray-500 group-hover:text-gray-700'}`} />\n                  <span>{item.name}</span>\n                  {isActive && (\n                    <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-blue-600 rounded-full\"></div>\n                  )}\n                </button>\n              );\n            })}\n          </div>\n\n          {/* Right Side - Search, Notifications, Profile */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Search Button */}\n            <Button variant=\"ghost\" size=\"sm\" className=\"hidden sm:flex\">\n              <Search className=\"w-4 h-4\" />\n            </Button>\n\n            {/* Notifications */}\n            <Button variant=\"ghost\" size=\"sm\" className=\"relative\">\n              <Bell className=\"w-4 h-4\" />\n              <span className=\"absolute -top-1 -right-1 w-2 h-2 bg-red-500 rounded-full\"></span>\n            </Button>\n\n            {/* Role Selector */}\n            <div className=\"hidden sm:block\">\n              <select\n                value={userRole}\n                onChange={(e) => onRoleChange(e.target.value as 'admin' | 'recruiter' | 'viewer')}\n                className=\"text-sm border border-gray-300 rounded-md px-2 py-1 bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"admin\">Admin</option>\n                <option value=\"recruiter\">Recruiter</option>\n                <option value=\"viewer\">Viewer</option>\n              </select>\n            </div>\n\n            {/* Profile Dropdown */}\n            <div className=\"relative\">\n              <button\n                onClick={() => setIsProfileDropdownOpen(!isProfileDropdownOpen)}\n                className=\"flex items-center space-x-2 text-sm rounded-full bg-white p-1.5 text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                <div className=\"w-8 h-8 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center\">\n                  <User className=\"w-4 h-4 text-white\" />\n                </div>\n                <div className=\"hidden sm:block text-left\">\n                  <p className=\"text-sm font-medium text-gray-900\">\n                    {state.currentUser?.full_name || 'Demo User'}\n                  </p>\n                  <Badge className={`text-xs ${getRoleColor(userRole)}`}>\n                    {userRole}\n                  </Badge>\n                </div>\n                <ChevronDown className=\"w-4 h-4 text-gray-400\" />\n              </button>\n\n              {/* Profile Dropdown Menu */}\n              {isProfileDropdownOpen && (\n                <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 border border-gray-200\">\n                  <div className=\"px-4 py-2 border-b border-gray-100\">\n                    <p className=\"text-sm font-medium text-gray-900\">\n                      {state.currentUser?.full_name || 'Demo User'}\n                    </p>\n                    <p className=\"text-xs text-gray-500\">\n                      {state.currentUser?.email || 'demo@example.com'}\n                    </p>\n                  </div>\n                  \n                  <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center space-x-2\">\n                    <User className=\"w-4 h-4\" />\n                    <span>Profile</span>\n                  </button>\n                  \n                  <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center space-x-2\">\n                    <Settings className=\"w-4 h-4\" />\n                    <span>Settings</span>\n                  </button>\n                  \n                  <div className=\"border-t border-gray-100 sm:hidden\">\n                    <div className=\"px-4 py-2\">\n                      <label className=\"block text-xs font-medium text-gray-700 mb-1\">Role</label>\n                      <select\n                        value={userRole}\n                        onChange={(e) => {\n                          onRoleChange(e.target.value as 'admin' | 'recruiter' | 'viewer');\n                          setIsProfileDropdownOpen(false);\n                        }}\n                        className=\"w-full text-sm border border-gray-300 rounded px-2 py-1\"\n                      >\n                        <option value=\"admin\">Admin</option>\n                        <option value=\"recruiter\">Recruiter</option>\n                        <option value=\"viewer\">Viewer</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Mobile Menu Button */}\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"md:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500\"\n            >\n              {isMobileMenuOpen ? (\n                <X className=\"w-5 h-5\" />\n              ) : (\n                <Menu className=\"w-5 h-5\" />\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Navigation Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden border-t border-gray-200 py-4\">\n            <div className=\"space-y-2\">\n              {visibleItems.map((item) => {\n                const Icon = item.icon;\n                const isActive = activeSection === item.id;\n                \n                return (\n                  <button\n                    key={item.id}\n                    onClick={() => {\n                      onSectionChange(item.id);\n                      setIsMobileMenuOpen(false);\n                    }}\n                    className={`w-full text-left px-4 py-3 rounded-lg font-medium transition-colors flex items-center space-x-3 ${\n                      isActive\n                        ? 'bg-blue-50 text-blue-700'\n                        : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                    }`}\n                  >\n                    <Icon className={`w-5 h-5 ${isActive ? 'text-blue-600' : 'text-gray-500'}`} />\n                    <div>\n                      <div className=\"font-medium\">{item.name}</div>\n                      <div className=\"text-xs text-gray-500\">{item.description}</div>\n                    </div>\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Click outside to close dropdowns */}\n      {(isProfileDropdownOpen || isMobileMenuOpen) && (\n        <div\n          className=\"fixed inset-0 z-10\"\n          onClick={() => {\n            setIsProfileDropdownOpen(false);\n            setIsMobileMenuOpen(false);\n          }}\n        />\n      )}\n    </nav>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3271, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/breadcrumb.tsx"],"sourcesContent":["\"use client\";\n\nimport { usePathname } from 'next/navigation';\nimport Link from 'next/link';\nimport { ChevronRight, Home } from 'lucide-react';\n\nexport function Breadcrumb() {\n  const pathname = usePathname();\n  \n  const getBreadcrumbs = () => {\n    const paths = pathname.split('/').filter(Boolean);\n    \n    if (paths.length === 0) return [];\n    \n    const breadcrumbs = [\n      { name: 'Home', href: '/', isHome: true }\n    ];\n\n    paths.forEach((path, index) => {\n      const href = '/' + paths.slice(0, index + 1).join('/');\n      let name = path.charAt(0).toUpperCase() + path.slice(1);\n      \n      // Map specific paths to better names\n      switch (path) {\n        case 'uploads':\n          name = 'Batch Uploads';\n          break;\n        case 'admin':\n          name = 'Administration';\n          break;\n        case 'users':\n          name = 'User Management';\n          break;\n      }\n      \n      breadcrumbs.push({ name, href, isHome: false });\n    });\n\n    return breadcrumbs;\n  };\n\n  const breadcrumbs = getBreadcrumbs();\n\n  if (breadcrumbs.length <= 1) {\n    return null; // Don't show breadcrumb for home page only\n  }\n\n  return (\n    <nav className=\"flex items-center space-x-1 text-sm text-gray-500 mb-4\" aria-label=\"Breadcrumb\">\n      {breadcrumbs.map((breadcrumb, index) => (\n        <div key={breadcrumb.href} className=\"flex items-center\">\n          {index > 0 && <ChevronRight className=\"w-4 h-4 mx-1 text-gray-400\" />}\n          {index === breadcrumbs.length - 1 ? (\n            <span className=\"text-gray-900 font-medium flex items-center\">\n              {breadcrumb.isHome && <Home className=\"w-4 h-4 mr-1\" />}\n              {breadcrumb.name}\n            </span>\n          ) : (\n            <Link \n              href={breadcrumb.href}\n              className=\"hover:text-gray-700 flex items-center transition-colors\"\n            >\n              {breadcrumb.isHome && <Home className=\"w-4 h-4 mr-1\" />}\n              {breadcrumb.name}\n            </Link>\n          )}\n        </div>\n      ))}\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;;;AAJA;;;;AAMO,SAAS;;IACd,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,iBAAiB;QACrB,MAAM,QAAQ,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC;QAEzC,IAAI,MAAM,MAAM,KAAK,GAAG,OAAO,EAAE;QAEjC,MAAM,cAAc;YAClB;gBAAE,MAAM;gBAAQ,MAAM;gBAAK,QAAQ;YAAK;SACzC;QAED,MAAM,OAAO,CAAC,CAAC,MAAM;YACnB,MAAM,OAAO,MAAM,MAAM,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC;YAClD,IAAI,OAAO,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC;YAErD,qCAAqC;YACrC,OAAQ;gBACN,KAAK;oBACH,OAAO;oBACP;gBACF,KAAK;oBACH,OAAO;oBACP;gBACF,KAAK;oBACH,OAAO;oBACP;YACJ;YAEA,YAAY,IAAI,CAAC;gBAAE;gBAAM;gBAAM,QAAQ;YAAM;QAC/C;QAEA,OAAO;IACT;IAEA,MAAM,cAAc;IAEpB,IAAI,YAAY,MAAM,IAAI,GAAG;QAC3B,OAAO,MAAM,2CAA2C;IAC1D;IAEA,qBACE,6LAAC;QAAI,WAAU;QAAyD,cAAW;kBAChF,YAAY,GAAG,CAAC,CAAC,YAAY,sBAC5B,6LAAC;gBAA0B,WAAU;;oBAClC,QAAQ,mBAAK,6LAAC,yNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;oBACrC,UAAU,YAAY,MAAM,GAAG,kBAC9B,6LAAC;wBAAK,WAAU;;4BACb,WAAW,MAAM,kBAAI,6LAAC,sMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BACrC,WAAW,IAAI;;;;;;6CAGlB,6LAAC,+JAAA,CAAA,UAAI;wBACH,MAAM,WAAW,IAAI;wBACrB,WAAU;;4BAET,WAAW,MAAM,kBAAI,6LAAC,sMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BACrC,WAAW,IAAI;;;;;;;;eAbZ,WAAW,IAAI;;;;;;;;;;AAoBjC;GAhEgB;;QACG,qIAAA,CAAA,cAAW;;;KADd","debugId":null}},
    {"offset": {"line": 3401, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/layout/AppLayout.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAppContext } from '@/contexts/AppContext';\nimport { Navbar } from '@/components/ui/navbar';\nimport { Breadcrumb } from '@/components/ui/breadcrumb';\n\ninterface AppLayoutProps {\n  children: React.ReactNode;\n}\n\nexport function AppLayout({ children }: AppLayoutProps) {\n  const { state, dispatch } = useAppContext();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [role, setRole] = useState<'admin' | 'recruiter' | 'viewer'>('admin');\n  const [activeSection, setActiveSection] = useState('jobs');\n\n  // Initialize user role and active section based on current route\n  useEffect(() => {\n    // Map pathname to active section\n    if (pathname.includes('/users')) {\n      setActiveSection('users');\n    } else if (pathname.includes('/uploads') || pathname.includes('/candidates')) {\n      setActiveSection('uploads');\n    } else if (pathname.includes('/admin')) {\n      setActiveSection('admin');\n    } else {\n      setActiveSection('jobs');\n    }\n\n    // Initialize role from context or default\n    if (state.currentUser?.role) {\n      setRole(state.currentUser.role as 'admin' | 'recruiter' | 'viewer');\n    }\n  }, [pathname, state.currentUser]);\n\n  // Handle role change and update context\n  const handleRoleChange = (newRole: 'admin' | 'recruiter' | 'viewer') => {\n    setRole(newRole);\n    \n    // Update the app context with the new role\n    dispatch({ \n      type: 'SET_CURRENT_USER', \n      payload: { \n        id: state.currentUser?.id || 'demo-user-1',\n        email: state.currentUser?.email || 'demo@jobmatcher.com',\n        full_name: state.currentUser?.full_name || 'Demo User',\n        role: newRole,\n        company_id: state.currentUser?.company_id || 'company-1',\n        password_hash: state.currentUser?.password_hash || 'demo-hash',\n        created_at: state.currentUser?.created_at || new Date(),\n        updated_at: state.currentUser?.updated_at || new Date(),\n        last_login: state.currentUser?.last_login,\n        is_active: state.currentUser?.is_active ?? true,\n        login_count: state.currentUser?.login_count || 0,\n        status: state.currentUser?.status || 'active',\n        profile: state.currentUser?.profile\n      }\n    });\n\n    // Reset to jobs section when role changes to ensure user has access\n    if (newRole === 'viewer' && (activeSection === 'users' || activeSection === 'admin')) {\n      setActiveSection('jobs');\n      router.push('/');\n    } else if (newRole === 'recruiter' && (activeSection === 'users' || activeSection === 'admin')) {\n      setActiveSection('jobs');\n      router.push('/');\n    }\n  };\n\n  // Handle section change and navigation\n  const handleSectionChange = (section: string) => {\n    setActiveSection(section);\n    \n    // Navigate to appropriate route\n    switch (section) {\n      case 'users':\n        router.push('/users');\n        break;\n      case 'uploads':\n        router.push('/uploads');\n        break;\n      case 'admin':\n        router.push('/admin');\n        break;\n      case 'jobs':\n      default:\n        router.push('/');\n        break;\n    }\n  };\n\n  // Show loading state while app is initializing\n  if (!state.initialized) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <h2 className=\"text-lg font-medium text-gray-900 mb-2\">Initializing Job Matcher</h2>\n          <p className=\"text-gray-600\">Setting up your workspace...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navbar\n        activeSection={activeSection}\n        onSectionChange={handleSectionChange}\n        userRole={role}\n        onRoleChange={handleRoleChange}      />\n      <main className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n          <Breadcrumb />\n          {children}\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}