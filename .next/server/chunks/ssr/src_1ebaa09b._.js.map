{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/admin/AdminGuard.tsx"],"sourcesContent":["\"use client\";\n\nimport { ReactNode } from 'react';\nimport { useAppContext } from '@/contexts/AppContext';\nimport { Shield, AlertCircle, Home } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\n\ninterface AdminGuardProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  requireRole?: 'admin' | 'recruiter' | 'viewer';\n  message?: string;\n}\n\nexport function AdminGuard({ \n  children, \n  fallback, \n  requireRole = 'admin',\n  message = \"You don't have permission to access this section.\"\n}: AdminGuardProps) {\n  const { state } = useAppContext();\n\n  // Check if user is authenticated and has required role\n  const hasRequiredRole = () => {\n    if (!state.currentUser) return false;\n    \n    const userRole = state.currentUser.role;\n    \n    // Admin has access to everything\n    if (userRole === 'admin') return true;\n    \n    // For other roles, check exact match\n    return userRole === requireRole;\n  };\n\n  if (!state.initialized) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"w-6 h-6 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n        <span className=\"ml-2 text-gray-600\">Loading...</span>\n      </div>\n    );\n  }\n\n  if (!state.currentUser) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <Card className=\"p-8 max-w-md mx-auto text-center\">\n          <AlertCircle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Authentication Required</h2>\n          <p className=\"text-gray-600 mb-6\">\n            You need to be logged in to access this page.\n          </p>\n          <Button className=\"w-full\">\n            <Home className=\"w-4 h-4 mr-2\" />\n            Go to Dashboard\n          </Button>\n        </Card>\n      </div>\n    );\n  }\n\n  if (!hasRequiredRole()) {\n    if (fallback) {\n      return <>{fallback}</>;\n    }\n\n    const getRoleDisplayName = (role: string) => {\n      switch (role) {\n        case 'admin': return 'Administrator';\n        case 'recruiter': return 'Recruiter';\n        case 'viewer': return 'Viewer';\n        default: return role;\n      }\n    };\n\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <Card className=\"p-8 max-w-md mx-auto text-center\">\n          <Shield className=\"w-16 h-16 text-yellow-500 mx-auto mb-4\" />\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n            {getRoleDisplayName(requireRole)} Access Required\n          </h2>\n          <p className=\"text-gray-600 mb-6\">\n            {message}\n          </p>\n          <div className=\"space-y-2\">\n            <p className=\"text-sm text-gray-500\">\n              Required role: <span className=\"font-medium\">{getRoleDisplayName(requireRole)}</span>\n            </p>\n            <p className=\"text-sm text-gray-500\">\n              Current role: <span className=\"font-medium\">{getRoleDisplayName(state.currentUser.role)}</span>\n            </p>\n            <p className=\"text-sm text-gray-500\">\n              User: <span className=\"font-medium\">{state.currentUser.full_name}</span>\n            </p>\n          </div>\n          <Button \n            className=\"w-full mt-6\" \n            onClick={() => window.history.back()}\n          >\n            <Home className=\"w-4 h-4 mr-2\" />\n            Go Back\n          </Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAAA;AACA;AACA;AANA;;;;;;AAeO,SAAS,WAAW,EACzB,QAAQ,EACR,QAAQ,EACR,cAAc,OAAO,EACrB,UAAU,mDAAmD,EAC7C;IAChB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD;IAE9B,uDAAuD;IACvD,MAAM,kBAAkB;QACtB,IAAI,CAAC,MAAM,WAAW,EAAE,OAAO;QAE/B,MAAM,WAAW,MAAM,WAAW,CAAC,IAAI;QAEvC,iCAAiC;QACjC,IAAI,aAAa,SAAS,OAAO;QAEjC,qCAAqC;QACrC,OAAO,aAAa;IACtB;IAEA,IAAI,CAAC,MAAM,WAAW,EAAE;QACtB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAK,WAAU;8BAAqB;;;;;;;;;;;;IAG3C;IAEA,IAAI,CAAC,MAAM,WAAW,EAAE;QACtB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;kCACvB,8OAAC;wBAAG,WAAU;kCAAwC;;;;;;kCACtD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAGlC,8OAAC,kIAAA,CAAA,SAAM;wBAAC,WAAU;;0CAChB,8OAAC,mMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;IAM3C;IAEA,IAAI,CAAC,mBAAmB;QACtB,IAAI,UAAU;YACZ,qBAAO;0BAAG;;QACZ;QAEA,MAAM,qBAAqB,CAAC;YAC1B,OAAQ;gBACN,KAAK;oBAAS,OAAO;gBACrB,KAAK;oBAAa,OAAO;gBACzB,KAAK;oBAAU,OAAO;gBACtB;oBAAS,OAAO;YAClB;QACF;QAEA,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,sMAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;kCAClB,8OAAC;wBAAG,WAAU;;4BACX,mBAAmB;4BAAa;;;;;;;kCAEnC,8OAAC;wBAAE,WAAU;kCACV;;;;;;kCAEH,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;;oCAAwB;kDACpB,8OAAC;wCAAK,WAAU;kDAAe,mBAAmB;;;;;;;;;;;;0CAEnE,8OAAC;gCAAE,WAAU;;oCAAwB;kDACrB,8OAAC;wCAAK,WAAU;kDAAe,mBAAmB,MAAM,WAAW,CAAC,IAAI;;;;;;;;;;;;0CAExF,8OAAC;gCAAE,WAAU;;oCAAwB;kDAC7B,8OAAC;wCAAK,WAAU;kDAAe,MAAM,WAAW,CAAC,SAAS;;;;;;;;;;;;;;;;;;kCAGpE,8OAAC,kIAAA,CAAA,SAAM;wBACL,WAAU;wBACV,SAAS,IAAM,OAAO,OAAO,CAAC,IAAI;;0CAElC,8OAAC,mMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;IAM3C;IAEA,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/candidates/UploadHistoryPage.tsx"],"sourcesContent":["'use client';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { Badge } from '@/components/ui/badge';\nimport { AdminGuard } from '@/components/admin/AdminGuard';\nimport { batchUploadService } from '@/services/batchUploadService';\nimport { BatchUpload, BatchUploadSummary, ProcessingStatus } from '@/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { \n  Clock, \n  CheckCircle, \n  XCircle, \n  AlertCircle, \n  Download, \n  RefreshCw,\n  Eye,\n  Trash2,\n  FileText,\n  Users,\n  Calendar,\n  Filter,\n  Building\n} from 'lucide-react';\n\ninterface UploadHistoryPageProps {\n  companyId?: string;\n  jobId?: string;\n}\n\nexport function UploadHistoryPage({ companyId = 'company1', jobId }: UploadHistoryPageProps) {\n  const [uploads, setUploads] = useState<BatchUpload[]>([]);  const [summary, setSummary] = useState<BatchUploadSummary | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [statusFilter, setStatusFilter] = useState<ProcessingStatus | 'all'>('all');\n  const { toast } = useToast();\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  \n  // Get jobId from URL params if not provided as prop\n  const effectiveJobId = jobId || searchParams.get('jobId') || undefined;\n\n  const loadData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const [uploadsData, summaryData] = await Promise.all([\n        batchUploadService.getBatchUploads(companyId, effectiveJobId),\n        batchUploadService.getBatchUploadSummary(companyId)\n      ]);\n      setUploads(uploadsData);\n      setSummary(summaryData);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to load upload history',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [companyId, effectiveJobId, toast]);\n\n  useEffect(() => {\n    loadData();\n    \n    // Subscribe to real-time updates\n    const unsubscribe = batchUploadService.subscribeToUploads((updatedUploads) => {\n      let filteredUploads = updatedUploads.filter(upload => upload.company_id === companyId);\n      \n      // Filter by job if specified\n      if (effectiveJobId) {\n        filteredUploads = filteredUploads.filter(upload => upload.job_id === effectiveJobId);\n      }\n      \n      setUploads(filteredUploads);\n    });\n\n    return unsubscribe;\n  }, [companyId, effectiveJobId, loadData]);\n\n  const handleRetry = async (id: string) => {\n    try {\n      await batchUploadService.retryFailedUpload(id);\n      await loadData();\n      toast({\n        title: 'Success',\n        description: 'Upload retry initiated',\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to retry upload',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleCancel = async (id: string) => {\n    try {\n      await batchUploadService.cancelUpload(id);\n      await loadData();\n      toast({\n        title: 'Success',\n        description: 'Upload cancelled',\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to cancel upload',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const getStatusIcon = (status: ProcessingStatus) => {\n    switch (status) {\n      case 'completed':\n        return CheckCircle;\n      case 'failed':\n        return XCircle;\n      case 'processing':\n        return Clock;\n      default:\n        return AlertCircle;\n    }\n  };\n\n  const getStatusColor = (status: ProcessingStatus) => {\n    switch (status) {\n      case 'completed':\n        return 'text-green-500';\n      case 'failed':\n        return 'text-red-500';\n      case 'processing':\n        return 'text-blue-500';\n      default:\n        return 'text-yellow-500';\n    }\n  };\n\n  const getStatusBadgeVariant = (status: ProcessingStatus) => {\n    switch (status) {\n      case 'completed':\n        return 'default';\n      case 'failed':\n        return 'destructive';\n      case 'processing':\n        return 'secondary';\n      default:\n        return 'outline';\n    }\n  };\n\n  const formatFileSize = (bytes?: number) => {\n    if (!bytes) return 'Unknown size';\n    const kb = bytes / 1024;\n    if (kb < 1024) return `${kb.toFixed(1)} KB`;\n    const mb = kb / 1024;\n    return `${mb.toFixed(1)} MB`;\n  };\n\n  const filteredUploads = uploads.filter(upload => \n    statusFilter === 'all' || upload.status === statusFilter\n  );\n\n  if (loading) {\n    return (\n      <div className=\"container mx-auto py-8\">\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"text-center\">\n            <Clock className=\"w-8 h-8 animate-spin mx-auto mb-4\" />\n            <p>Loading upload history...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <AdminGuard requireRole=\"recruiter\" message=\"You need recruiter or admin access to view upload history.\">\n      <div className=\"container mx-auto py-8 space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          \n\n              <div className=\"mb-6\">\n                <h1 className=\"text-2xl font-bold text-gray-900\">Batch Uploads{effectiveJobId ? ' - Job Specific' : ' - All Jobs'}</h1>\n                <p className=\"text-gray-600\">Upload and process candidate batches</p>\n                         {effectiveJobId && (\n              <div className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-50 text-blue-700 border border-blue-200\">\n                <Building className=\"w-4 h-4 mr-2\" />\n                Showing uploads for selected job only\n              </div>\n            )}\n            </div>\n        <div className=\"flex items-center space-x-2\">\n          {effectiveJobId && (\n            <Button \n              onClick={() => router.push('/uploads')} \n              variant=\"outline\" \n              size=\"sm\"\n            >\n              View All Uploads\n            </Button>\n          )}\n          <Button onClick={loadData} variant=\"outline\" size=\"sm\">\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\n            Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Summary Cards */}\n      {summary && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <FileText className=\"w-5 h-5 text-blue-500\" />\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Total Uploads</p>\n                  <p className=\"text-2xl font-bold\">{summary.total_uploads}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Clock className=\"w-5 h-5 text-yellow-500\" />\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Processing</p>\n                  <p className=\"text-2xl font-bold\">{summary.processing_uploads}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Completed</p>\n                  <p className=\"text-2xl font-bold\">{summary.completed_uploads}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <XCircle className=\"w-5 h-5 text-red-500\" />\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Failed</p>\n                  <p className=\"text-2xl font-bold\">{summary.failed_uploads}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Users className=\"w-5 h-5 text-purple-500\" />\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Total Candidates</p>\n                  <p className=\"text-2xl font-bold\">{summary.total_candidates_processed}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {/* Filter Options */}\n      <Card>\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center space-x-4\">\n            <Filter className=\"w-4 h-4\" />\n            <span className=\"text-sm font-medium\">Filter by status:</span>\n            <div className=\"flex space-x-2\">\n              {(['all', 'pending', 'processing', 'completed', 'failed'] as const).map((status) => (\n                <Button\n                  key={status}\n                  variant={statusFilter === status ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setStatusFilter(status)}\n                >\n                  {status.charAt(0).toUpperCase() + status.slice(1)}\n                </Button>\n              ))}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Upload List */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Upload History ({filteredUploads.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {filteredUploads.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <FileText className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                <p className=\"text-muted-foreground\">No uploads found</p>\n              </div>\n            ) : (\n              filteredUploads.map((upload) => {\n                const StatusIcon = getStatusIcon(upload.status);\n                const progressPercentage = upload.total_candidates \n                  ? Math.round((upload.processed_candidates || 0) / upload.total_candidates * 100)\n                  : 0;\n\n                return (\n                  <div\n                    key={upload.id}\n                    className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-muted/50 transition-colors\"\n                  >\n                    <div className=\"flex items-center space-x-4 flex-1\">\n                      <StatusIcon className={`w-5 h-5 ${getStatusColor(upload.status)}`} />\n                        <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center space-x-2 mb-1\">\n                          <p className=\"font-medium truncate\">{upload.file_name}</p>\n                          <Badge variant={getStatusBadgeVariant(upload.status)}>\n                            {upload.status}\n                          </Badge>\n                        </div>\n                        \n                        {/* Job Information */}\n                        {upload.job && !effectiveJobId && (\n                          <div className=\"mb-2\">\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-100 text-blue-800\">\n                              <Building className=\"w-3 h-3 mr-1\" />\n                              {upload.job.title}\n                            </span>\n                          </div>\n                        )}\n                        \n                        <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n                          <span className=\"flex items-center\">\n                            <Calendar className=\"w-3 h-3 mr-1\" />\n                            {new Date(upload.created_at).toLocaleString()}\n                          </span>\n                          <span>{formatFileSize(upload.file_size)}</span>\n                          {upload.total_candidates && (\n                            <span className=\"flex items-center\">\n                              <Users className=\"w-3 h-3 mr-1\" />\n                              {upload.successful_candidates || 0}/{upload.total_candidates} candidates\n                            </span>\n                          )}\n                        </div>\n\n                        {upload.status === 'processing' && upload.total_candidates && (\n                          <div className=\"mt-2\">\n                            <div className=\"flex items-center justify-between text-xs mb-1\">\n                              <span>Processing candidates...</span>\n                              <span>{upload.processed_candidates || 0}/{upload.total_candidates}</span>\n                            </div>\n                            <Progress value={progressPercentage} className=\"h-2\" />\n                          </div>\n                        )}\n\n                        {upload.error_message && (\n                          <p className=\"text-sm text-red-500 mt-1\">{upload.error_message}</p>\n                        )}\n                      </div>\n                    </div>                    <div className=\"flex items-center space-x-2 ml-4\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => router.push(`/uploads/${upload.id}`)}\n                      >\n                        <Eye className=\"w-4 h-4 mr-1\" />\n                        View Details\n                      </Button>\n                      \n                      {upload.job && !effectiveJobId && (\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => router.push(`/uploads/job/${upload.job_id}`)}\n                        >\n                          View Job Uploads\n                        </Button>\n                      )}\n                      \n                      {upload.status === 'failed' && (\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleRetry(upload.id)}\n                        >\n                          <RefreshCw className=\"w-4 h-4 mr-1\" />\n                          Retry\n                        </Button>\n                      )}\n                      \n                      {upload.status === 'processing' && (\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleCancel(upload.id)}\n                        >\n                          <XCircle className=\"w-4 h-4 mr-1\" />\n                          Cancel\n                        </Button>\n                      )}\n                    </div>\n                  </div>                );\n              })\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n    </AdminGuard>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;;;;;;;;;;;;AAgCO,SAAS,kBAAkB,EAAE,YAAY,UAAU,EAAE,KAAK,EAA0B;IACzF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAAI,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA6B;IAC9H,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4B;IAC3E,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAEnC,oDAAoD;IACpD,MAAM,iBAAiB,SAAS,aAAa,GAAG,CAAC,YAAY;IAE7D,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC3B,IAAI;YACF,WAAW;YACX,MAAM,CAAC,aAAa,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;gBACnD,qIAAA,CAAA,qBAAkB,CAAC,eAAe,CAAC,WAAW;gBAC9C,qIAAA,CAAA,qBAAkB,CAAC,qBAAqB,CAAC;aAC1C;YACD,WAAW;YACX,WAAW;QACb,EAAE,OAAO,OAAO;YACd,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;QACF,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;QAAW;QAAgB;KAAM;IAErC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;QAEA,iCAAiC;QACjC,MAAM,cAAc,qIAAA,CAAA,qBAAkB,CAAC,kBAAkB,CAAC,CAAC;YACzD,IAAI,kBAAkB,eAAe,MAAM,CAAC,CAAA,SAAU,OAAO,UAAU,KAAK;YAE5E,6BAA6B;YAC7B,IAAI,gBAAgB;gBAClB,kBAAkB,gBAAgB,MAAM,CAAC,CAAA,SAAU,OAAO,MAAM,KAAK;YACvE;YAEA,WAAW;QACb;QAEA,OAAO;IACT,GAAG;QAAC;QAAW;QAAgB;KAAS;IAExC,MAAM,cAAc,OAAO;QACzB,IAAI;YACF,MAAM,qIAAA,CAAA,qBAAkB,CAAC,iBAAiB,CAAC;YAC3C,MAAM;YACN,MAAM;gBACJ,OAAO;gBACP,aAAa;YACf;QACF,EAAE,OAAO,OAAO;YACd,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;QACF;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,IAAI;YACF,MAAM,qIAAA,CAAA,qBAAkB,CAAC,YAAY,CAAC;YACtC,MAAM;YACN,MAAM;gBACJ,OAAO;gBACP,aAAa;YACf;QACF,EAAE,OAAO,OAAO;YACd,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;QACF;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,OAAQ;YACN,KAAK;gBACH,OAAO,2NAAA,CAAA,cAAW;YACpB,KAAK;gBACH,OAAO,4MAAA,CAAA,UAAO;YAChB,KAAK;gBACH,OAAO,oMAAA,CAAA,QAAK;YACd;gBACE,OAAO,oNAAA,CAAA,cAAW;QACtB;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,wBAAwB,CAAC;QAC7B,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,CAAC,OAAO,OAAO;QACnB,MAAM,KAAK,QAAQ;QACnB,IAAI,KAAK,MAAM,OAAO,GAAG,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC;QAC3C,MAAM,KAAK,KAAK;QAChB,OAAO,GAAG,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC;IAC9B;IAEA,MAAM,kBAAkB,QAAQ,MAAM,CAAC,CAAA,SACrC,iBAAiB,SAAS,OAAO,MAAM,KAAK;IAG9C,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,8OAAC;sCAAE;;;;;;;;;;;;;;;;;;;;;;IAKb;IACA,qBACE,8OAAC,yIAAA,CAAA,aAAU;QAAC,aAAY;QAAY,SAAQ;kBAC1C,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCAGT,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;;wCAAmC;wCAAc,iBAAiB,oBAAoB;;;;;;;8CACpG,8OAAC;oCAAE,WAAU;8CAAgB;;;;;;gCACnB,gCACZ,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,0MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;sCAK7C,8OAAC;4BAAI,WAAU;;gCACZ,gCACC,8OAAC,kIAAA,CAAA,SAAM;oCACL,SAAS,IAAM,OAAO,IAAI,CAAC;oCAC3B,SAAQ;oCACR,MAAK;8CACN;;;;;;8CAIH,8OAAC,kIAAA,CAAA,SAAM;oCAAC,SAAS;oCAAU,SAAQ;oCAAU,MAAK;;sDAChD,8OAAC,gNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;gBAO3C,yBACC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,gIAAA,CAAA,OAAI;sCACH,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,8MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,8OAAC;;8DACC,8OAAC;oDAAE,WAAU;8DAAgC;;;;;;8DAC7C,8OAAC;oDAAE,WAAU;8DAAsB,QAAQ,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAMhE,8OAAC,gIAAA,CAAA,OAAI;sCACH,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,oMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;sDACjB,8OAAC;;8DACC,8OAAC;oDAAE,WAAU;8DAAgC;;;;;;8DAC7C,8OAAC;oDAAE,WAAU;8DAAsB,QAAQ,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAMrE,8OAAC,gIAAA,CAAA,OAAI;sCACH,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,2NAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;sDACvB,8OAAC;;8DACC,8OAAC;oDAAE,WAAU;8DAAgC;;;;;;8DAC7C,8OAAC;oDAAE,WAAU;8DAAsB,QAAQ,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAMpE,8OAAC,gIAAA,CAAA,OAAI;sCACH,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,4MAAA,CAAA,UAAO;4CAAC,WAAU;;;;;;sDACnB,8OAAC;;8DACC,8OAAC;oDAAE,WAAU;8DAAgC;;;;;;8DAC7C,8OAAC;oDAAE,WAAU;8DAAsB,QAAQ,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAMjE,8OAAC,gIAAA,CAAA,OAAI;sCACH,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,oMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;sDACjB,8OAAC;;8DACC,8OAAC;oDAAE,WAAU;8DAAgC;;;;;;8DAC7C,8OAAC;oDAAE,WAAU;8DAAsB,QAAQ,0BAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BASjF,8OAAC,gIAAA,CAAA,OAAI;8BACH,cAAA,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;kCACrB,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,8OAAC;oCAAK,WAAU;8CAAsB;;;;;;8CACtC,8OAAC;oCAAI,WAAU;8CACZ,AAAC;wCAAC;wCAAO;wCAAW;wCAAc;wCAAa;qCAAS,CAAW,GAAG,CAAC,CAAC,uBACvE,8OAAC,kIAAA,CAAA,SAAM;4CAEL,SAAS,iBAAiB,SAAS,YAAY;4CAC/C,MAAK;4CACL,SAAS,IAAM,gBAAgB;sDAE9B,OAAO,MAAM,CAAC,GAAG,WAAW,KAAK,OAAO,KAAK,CAAC;2CAL1C;;;;;;;;;;;;;;;;;;;;;;;;;;8BAcjB,8OAAC,gIAAA,CAAA,OAAI;;sCACH,8OAAC,gIAAA,CAAA,aAAU;sCACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;;oCAAC;oCAAiB,gBAAgB,MAAM;oCAAC;;;;;;;;;;;;sCAErD,8OAAC,gIAAA,CAAA,cAAW;sCACV,cAAA,8OAAC;gCAAI,WAAU;0CACZ,gBAAgB,MAAM,KAAK,kBAC1B,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,8MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,8OAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;2CAGvC,gBAAgB,GAAG,CAAC,CAAC;oCACnB,MAAM,aAAa,cAAc,OAAO,MAAM;oCAC9C,MAAM,qBAAqB,OAAO,gBAAgB,GAC9C,KAAK,KAAK,CAAC,CAAC,OAAO,oBAAoB,IAAI,CAAC,IAAI,OAAO,gBAAgB,GAAG,OAC1E;oCAEJ,qBACE,8OAAC;wCAEC,WAAU;;0DAEV,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAW,WAAW,CAAC,QAAQ,EAAE,eAAe,OAAO,MAAM,GAAG;;;;;;kEAC/D,8OAAC;wDAAI,WAAU;;0EACf,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAE,WAAU;kFAAwB,OAAO,SAAS;;;;;;kFACrD,8OAAC,iIAAA,CAAA,QAAK;wEAAC,SAAS,sBAAsB,OAAO,MAAM;kFAChD,OAAO,MAAM;;;;;;;;;;;;4DAKjB,OAAO,GAAG,IAAI,CAAC,gCACd,8OAAC;gEAAI,WAAU;0EACb,cAAA,8OAAC;oEAAK,WAAU;;sFACd,8OAAC,0MAAA,CAAA,WAAQ;4EAAC,WAAU;;;;;;wEACnB,OAAO,GAAG,CAAC,KAAK;;;;;;;;;;;;0EAKvB,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAK,WAAU;;0FACd,8OAAC,0MAAA,CAAA,WAAQ;gFAAC,WAAU;;;;;;4EACnB,IAAI,KAAK,OAAO,UAAU,EAAE,cAAc;;;;;;;kFAE7C,8OAAC;kFAAM,eAAe,OAAO,SAAS;;;;;;oEACrC,OAAO,gBAAgB,kBACtB,8OAAC;wEAAK,WAAU;;0FACd,8OAAC,oMAAA,CAAA,QAAK;gFAAC,WAAU;;;;;;4EAChB,OAAO,qBAAqB,IAAI;4EAAE;4EAAE,OAAO,gBAAgB;4EAAC;;;;;;;;;;;;;4DAKlE,OAAO,MAAM,KAAK,gBAAgB,OAAO,gBAAgB,kBACxD,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAI,WAAU;;0FACb,8OAAC;0FAAK;;;;;;0FACN,8OAAC;;oFAAM,OAAO,oBAAoB,IAAI;oFAAE;oFAAE,OAAO,gBAAgB;;;;;;;;;;;;;kFAEnE,8OAAC,oIAAA,CAAA,WAAQ;wEAAC,OAAO;wEAAoB,WAAU;;;;;;;;;;;;4DAIlD,OAAO,aAAa,kBACnB,8OAAC;gEAAE,WAAU;0EAA6B,OAAO,aAAa;;;;;;;;;;;;;;;;;;4CAG9D;0DAAoB,8OAAC;gDAAI,WAAU;;kEACvC,8OAAC,kIAAA,CAAA,SAAM;wDACL,SAAQ;wDACR,MAAK;wDACL,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE;;0EAElD,8OAAC,gMAAA,CAAA,MAAG;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;oDAIjC,OAAO,GAAG,IAAI,CAAC,gCACd,8OAAC,kIAAA,CAAA,SAAM;wDACL,SAAQ;wDACR,MAAK;wDACL,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,aAAa,EAAE,OAAO,MAAM,EAAE;kEAC3D;;;;;;oDAKF,OAAO,MAAM,KAAK,0BACjB,8OAAC,kIAAA,CAAA,SAAM;wDACL,SAAQ;wDACR,MAAK;wDACL,SAAS,IAAM,YAAY,OAAO,EAAE;;0EAEpC,8OAAC,gNAAA,CAAA,YAAS;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;oDAKzC,OAAO,MAAM,KAAK,8BACjB,8OAAC,kIAAA,CAAA,SAAM;wDACL,SAAQ;wDACR,MAAK;wDACL,SAAS,IAAM,aAAa,OAAO,EAAE;;0EAErC,8OAAC,4MAAA,CAAA,UAAO;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;;;;;;;;uCAxFrC,OAAO,EAAE;;;;;gCA8FpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQd","debugId":null}},
    {"offset": {"line": 1251, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/app/uploads/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { UploadHistoryPage } from '@/components/candidates/UploadHistoryPage';\n\nexport default function UploadsPage() {\n  return (\n      <UploadHistoryPage />\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACI,8OAAC,qJAAA,CAAA,oBAAiB;;;;;AAExB","debugId":null}}]
}