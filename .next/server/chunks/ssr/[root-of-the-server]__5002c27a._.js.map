{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/lib/mockData.ts"],"sourcesContent":["import { \n  Company, User, Job, Candidate, JobMatch, AIProcessingQueue, \n  AuditLog, BatchUpload, SavedSearch, CandidateTag, ProcessingMetric,\n  CandidateStatusHistory, CandidateComment, APIUsage\n} from '@/types/index';\n\n// Utility function to generate UUIDs\nconst generateUUID = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n};\n\n// Mock Companies\nexport const mockCompanies: Company[] = [\n  {\n    id: 'comp-1',\n    name: 'TechCorp Solutions',\n    slug: 'techcorp-solutions',\n    subscription_plan: 'enterprise',\n    max_users: 50,\n    max_jobs_per_month: 100,\n    created_at: new Date('2023-01-15'),\n    updated_at: new Date('2024-01-15'),\n    is_active: true\n  },\n  {\n    id: 'comp-2',\n    name: 'StartupHub Inc',\n    slug: 'startupHub-inc',\n    subscription_plan: 'professional',\n    max_users: 25,\n    max_jobs_per_month: 50,\n    created_at: new Date('2023-06-10'),\n    updated_at: new Date('2024-06-10'),\n    is_active: true\n  },\n  {\n    id: 'comp-3',\n    name: 'SmallBiz Ltd',\n    slug: 'smallbiz-ltd',\n    subscription_plan: 'starter',\n    max_users: 5,\n    max_jobs_per_month: 10,\n    created_at: new Date('2023-09-20'),\n    updated_at: new Date('2024-09-20'),\n    is_active: true\n  }\n];\n\n// Mock Users\nexport const mockUsers: User[] = [\n  {\n    id: 'user-1',\n    company_id: 'comp-1',\n    email: 'admin@techcorp.com',\n    password_hash: 'hashed_password_1',\n    full_name: 'John Anderson',\n    role: 'admin',\n    created_at: new Date('2023-01-16'),\n    updated_at: new Date('2024-01-16'),\n    is_active: true\n  },\n  {\n    id: 'user-2',\n    company_id: 'comp-1',\n    email: 'recruiter@techcorp.com',\n    password_hash: 'hashed_password_2',\n    full_name: 'Sarah Johnson',\n    role: 'recruiter',\n    created_at: new Date('2023-02-01'),\n    updated_at: new Date('2024-02-01'),\n    is_active: true\n  },\n  {\n    id: 'user-3',\n    company_id: 'comp-2',\n    email: 'admin@startupHub.com',\n    password_hash: 'hashed_password_3',\n    full_name: 'Mike Chen',\n    role: 'admin',\n    created_at: new Date('2023-06-11'),\n    updated_at: new Date('2024-06-11'),\n    is_active: true\n  },\n  {\n    id: 'user-4',\n    company_id: 'comp-2',\n    email: 'recruiter@startupHub.com',\n    password_hash: 'hashed_password_4',\n    full_name: 'Emily Davis',\n    role: 'recruiter',\n    created_at: new Date('2023-07-01'),\n    updated_at: new Date('2024-07-01'),\n    is_active: true\n  },\n  {\n    id: 'user-5',\n    company_id: 'comp-3',\n    email: 'owner@smallbiz.com',\n    password_hash: 'hashed_password_5',\n    full_name: 'David Wilson',\n    role: 'admin',\n    created_at: new Date('2023-09-21'),\n    updated_at: new Date('2024-09-21'),\n    is_active: true\n  }\n];\n\n// Mock Jobs\nexport const mockJobs: Job[] = [\n  {\n    id: 'job-1',\n    company_id: 'comp-1',\n    title: 'Senior Software Engineer',\n    description: 'We are looking for a senior software engineer with 5+ years of experience in React, Node.js, and TypeScript. The ideal candidate will have experience with microservices architecture and cloud platforms.',\n    location: 'San Francisco, CA',\n    employment_type: 'full_time',\n    salary_min: 120000,\n    salary_max: 180000,\n    created_at: new Date('2024-01-10'),\n    updated_at: new Date('2024-01-10'),\n    is_active: true\n  },\n  {\n    id: 'job-2',\n    company_id: 'comp-1',\n    title: 'Product Manager',\n    description: 'Seeking an experienced product manager to lead our enterprise software products. Must have 3+ years of product management experience and strong analytical skills.',\n    location: 'New York, NY',\n    employment_type: 'full_time',\n    salary_min: 100000,\n    salary_max: 140000,\n    created_at: new Date('2024-01-15'),\n    updated_at: new Date('2024-01-15'),\n    is_active: true\n  },\n  {\n    id: 'job-3',\n    company_id: 'comp-2',\n    title: 'Frontend Developer',\n    description: 'Join our startup as a frontend developer! We\\'re looking for someone passionate about creating amazing user experiences with React and modern web technologies.',\n    location: 'Austin, TX',\n    employment_type: 'full_time',\n    salary_min: 80000,\n    salary_max: 110000,\n    created_at: new Date('2024-01-20'),\n    updated_at: new Date('2024-01-20'),\n    is_active: true\n  },\n  {\n    id: 'job-4',\n    company_id: 'comp-2',\n    title: 'DevOps Engineer',\n    description: 'We need a DevOps engineer to help scale our infrastructure. Experience with AWS, Docker, and Kubernetes is required.',\n    location: 'Remote',\n    employment_type: 'contract',\n    salary_min: 90000,\n    salary_max: 130000,\n    created_at: new Date('2024-02-01'),\n    updated_at: new Date('2024-02-01'),\n    is_active: true\n  },\n  {\n    id: 'job-5',\n    company_id: 'comp-3',\n    title: 'Full Stack Developer',\n    description: 'Small but growing company looking for a versatile full stack developer. Must be comfortable with both frontend and backend technologies.',\n    location: 'Denver, CO',\n    employment_type: 'full_time',\n    salary_min: 70000,\n    salary_max: 95000,\n    created_at: new Date('2024-02-10'),\n    updated_at: new Date('2024-02-10'),\n    is_active: true\n  }\n];\n\n// Mock Candidates\nexport const mockCandidates: Candidate[] = [\n  {\n    id: 'cand-1',\n    full_name: 'Alice Thompson',\n    email: 'alice.thompson@email.com',\n    phone: '+1-555-0101',\n    resume_url: 'https://tmpfiles.org/dl/1803766/convert.pdf',\n    created_at: new Date('2024-01-05'),\n    updated_at: new Date('2024-01-05'),\n    is_active: true\n  },\n  {\n    id: 'cand-2',\n    full_name: 'Bob Rodriguez',\n    email: 'bob.rodriguez@email.com',\n    phone: '+1-555-0102',\n    resume_url: '/resumes/bob-rodriguez.pdf',\n    created_at: new Date('2024-01-08'),\n    updated_at: new Date('2024-01-08'),\n    is_active: true\n  },\n  {\n    id: 'cand-3',\n    full_name: 'Carol Kim',\n    email: 'carol.kim@email.com',\n    phone: '+1-555-0103',\n    resume_url: '/resumes/carol-kim.pdf',\n    created_at: new Date('2024-01-12'),\n    updated_at: new Date('2024-01-12'),\n    is_active: true\n  },\n  {\n    id: 'cand-4',\n    full_name: 'Daniel Brown',\n    email: 'daniel.brown@email.com',\n    phone: '+1-555-0104',\n    resume_url: '/resumes/daniel-brown.pdf',\n    created_at: new Date('2024-01-18'),\n    updated_at: new Date('2024-01-18'),\n    is_active: true\n  },\n  {\n    id: 'cand-5',\n    full_name: 'Eva Martinez',\n    email: 'eva.martinez@email.com',\n    phone: '+1-555-0105',\n    resume_url: '/resumes/eva-martinez.pdf',\n    created_at: new Date('2024-01-25'),\n    updated_at: new Date('2024-01-25'),\n    is_active: true\n  },\n  {\n    id: 'cand-6',\n    full_name: 'Frank Liu',\n    email: 'frank.liu@email.com',\n    phone: '+1-555-0106',\n    resume_url: '/resumes/frank-liu.pdf',\n    created_at: new Date('2024-02-02'),\n    updated_at: new Date('2024-02-02'),\n    is_active: true\n  }\n];\n\n// Mock Job Matches\nexport const mockJobMatches: JobMatch[] = [\n  {\n    id: 'match-1',\n    job_id: 'job-1',\n    candidate_id: 'cand-1',\n    status: 'interviewing',\n    score: 0.89,\n    analysis: {\n      skills_match: 0.92,\n      experience_match: 0.85,\n      education_match: 0.90,\n      salary_expectations: 0.88\n    },\n    created_at: new Date('2024-01-11'),\n    updated_at: new Date('2024-01-20')\n  },\n  {\n    id: 'match-2',\n    job_id: 'job-1',\n    candidate_id: 'cand-2',\n    status: 'applied',\n    score: 0.76,\n    analysis: {\n      skills_match: 0.80,\n      experience_match: 0.75,\n      education_match: 0.85,\n      salary_expectations: 0.65\n    },\n    created_at: new Date('2024-01-12'),\n    updated_at: new Date('2024-01-12')\n  },\n  {\n    id: 'match-3',\n    job_id: 'job-2',\n    candidate_id: 'cand-3',\n    status: 'applied',\n    score: 0.91,\n    analysis: {\n      skills_match: 0.88,\n      experience_match: 0.95,\n      education_match: 0.92,\n      salary_expectations: 0.90\n    },\n    created_at: new Date('2024-01-16'),\n    updated_at: new Date('2024-02-01')\n  },\n  {\n    id: 'match-4',\n    job_id: 'job-3',\n    candidate_id: 'cand-4',\n    status: 'rejected',\n    score: 0.45,\n    analysis: {\n      skills_match: 0.50,\n      experience_match: 0.30,\n      education_match: 0.60,\n      salary_expectations: 0.40\n    },\n    created_at: new Date('2024-01-21'),\n    updated_at: new Date('2024-01-25')\n  },\n  \n  {\n    id: 'match-5',\n    job_id: 'job-4',\n    candidate_id: 'cand-5',\n    status: 'hired',\n    score: 0.94,\n    analysis: {\n      skills_match: 0.96,\n      experience_match: 0.90,\n      education_match: 0.95,\n      salary_expectations: 0.95\n    },\n    created_at: new Date('2024-02-03'),\n    updated_at: new Date('2024-02-15')\n  }\n];\n\n// Generate additional mock data for other entities\nexport const mockAIProcessingQueue: AIProcessingQueue[] = [\n  {\n    id: 'ai-1',\n    job_id: 'job-1',\n    candidate_id: 'cand-6',\n    status: 'processing',\n    result: null,\n    created_at: new Date('2024-02-20'),\n    updated_at: new Date('2024-02-20')\n  },\n  {\n    id: 'ai-2',\n    job_id: 'job-2',\n    candidate_id: 'cand-4',\n    status: 'completed',\n    result: {\n      match_score: 0.72,\n      processing_time: 1.5,\n      confidence: 0.85\n    },\n    created_at: new Date('2024-02-19'),\n    updated_at: new Date('2024-02-19')\n  }\n];\n\nexport const mockAuditLogs: AuditLog[] = [\n  {\n    id: 'audit-1',\n    user_id: 'user-1',\n    action: 'create_job',\n    entity: 'job',\n    entity_id: 'job-1',\n    details: { title: 'Senior Software Engineer' },\n    created_at: new Date('2024-01-10')\n  },\n  {\n    id: 'audit-2',\n    user_id: 'user-2',\n    action: 'update_match_status',\n    entity: 'job_match',\n    entity_id: 'match-1',\n    details: { old_status: 'applied', new_status: 'interviewing' },\n    created_at: new Date('2024-01-20')\n  }\n];\n\nexport const mockBatchUploads: BatchUpload[] = [\n  {\n    id: 'batch-1',\n    company_id: 'comp-1',\n    job_id: 'job-1',\n    file_name: 'resumes_batch_january.zip',\n    status: 'completed',\n    uploaded_by: 'user-2',\n    created_at: new Date('2024-01-15'),\n    updated_at: new Date('2024-01-15')\n  },\n  {\n    id: 'batch-2',\n    company_id: 'comp-2',\n    job_id: 'job-3',\n    file_name: 'candidate_cvs_feb.zip',\n    status: 'processing',\n    uploaded_by: 'user-4',\n    created_at: new Date('2024-02-10'),\n    updated_at: new Date('2024-02-10')\n  }\n];\n\nexport const mockSavedSearches: SavedSearch[] = [\n  {\n    id: 'search-1',\n    user_id: 'user-2',\n    name: 'Senior Engineers',\n    query: {\n      keywords: ['senior', 'engineer'],\n      location: 'San Francisco',\n      salary_min: 100000\n    },\n    created_at: new Date('2024-01-05'),\n    updated_at: new Date('2024-01-05')\n  }\n];\n\nexport const mockCandidateTags: CandidateTag[] = [\n  {\n    id: 'tag-1',\n    candidate_id: 'cand-1',\n    tag: 'React Expert',\n    created_at: new Date('2024-01-11')\n  },\n  {\n    id: 'tag-2',\n    candidate_id: 'cand-1',\n    tag: 'Senior Level',\n    created_at: new Date('2024-01-11')\n  },\n  {\n    id: 'tag-3',\n    candidate_id: 'cand-3',\n    tag: 'Product Management',\n    created_at: new Date('2024-01-16')\n  }\n];\n\nexport const mockProcessingMetrics: ProcessingMetric[] = [\n  {\n    id: 'metric-1',\n    job_id: 'job-1',\n    candidate_id: 'cand-1',\n    metric: 'cv_parsing_time',\n    value: 2.5,\n    created_at: new Date('2024-01-11')\n  },\n  {\n    id: 'metric-2',\n    job_id: 'job-1',\n    candidate_id: 'cand-1',\n    metric: 'matching_score_calculation',\n    value: 0.89,\n    created_at: new Date('2024-01-11')\n  }\n];\n\nexport const mockCandidateStatusHistory: CandidateStatusHistory[] = [\n  {\n    id: 'status-1',\n    candidate_id: 'cand-1',\n    status: 'new',\n    updated_by: 'user-2',\n    updated_at: new Date('2024-01-05')\n  },\n  {\n    id: 'status-2',\n    candidate_id: 'cand-1',\n    status: 'reviewed',\n    updated_by: 'user-2',\n    updated_at: new Date('2024-01-11')\n  },\n  {\n    id: 'status-3',\n    candidate_id: 'cand-1',\n    status: 'interviewed',\n    updated_by: 'user-1',\n    updated_at: new Date('2024-01-20')\n  }\n];\n\nexport const mockCandidateComments: CandidateComment[] = [\n  {\n    id: 'comment-1',\n    candidate_id: 'cand-1',\n    user_id: 'user-2',\n    comment: 'Strong technical background, especially in React and Node.js. Would be a good fit for our senior engineer position.',\n    created_at: new Date('2024-01-11')\n  },\n  {\n    id: 'comment-2',\n    candidate_id: 'cand-1',\n    user_id: 'user-1',\n    comment: 'Interview went well. Candidate showed deep understanding of system architecture.',\n    created_at: new Date('2024-01-20')\n  }\n];\n\nexport const mockAPIUsage: APIUsage[] = [\n  {\n    id: 'api-1',\n    company_id: 'comp-1',\n    user_id: 'user-1',\n    endpoint: '/api/candidates',\n    request_payload: { query: 'React developer' },\n    response_payload: { results: 15 },\n    status_code: 200,\n    created_at: new Date('2024-02-01')\n  },\n  {\n    id: 'api-2',\n    company_id: 'comp-1',\n    user_id: 'user-2',\n    endpoint: '/api/job-matches',\n    request_payload: { job_id: 'job-1' },\n    response_payload: { matches: 5 },\n    status_code: 200,\n    created_at: new Date('2024-02-01')\n  }\n];"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/services/jobMatchService.ts"],"sourcesContent":["import { JobMatch, JobMatchStatus } from '@/types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { mockJobMatches as jobMatches } from '@/lib/mockData';\n\nexport const jobMatchService = {\n  async getJobMatches(jobId?: string): Promise<JobMatch[]> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    if (jobId) {\n      return jobMatches.filter(match => match.job_id === jobId);\n    }\n    return jobMatches;\n  },\n\n  async getCandidateMatches(candidateId: string): Promise<JobMatch[]> {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return jobMatches.filter(match => match.candidate_id === candidateId);\n  },\n\n  async updateMatchStatus(matchId: string, status: JobMatchStatus): Promise<JobMatch> {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    const match = jobMatches.find(m => m.id === matchId);\n    if (!match) throw new Error('Match not found');\n    \n    match.status = status;\n    match.updated_at = new Date();\n    return match;\n  },\n\n  async calculateMatchScore(jobId: string, candidateId: string): Promise<JobMatch> {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Simulate AI matching logic\n    const score = Math.random() * 0.5 + 0.5; // Random score between 0.5 and 1.0\n    const analysis = {\n      skills_match: Math.random() * 0.3 + 0.7,\n      experience_match: Math.random() * 0.3 + 0.7,\n      education_match: Math.random() * 0.3 + 0.7,\n      location_match: Math.random() * 0.3 + 0.7\n    };\n\n    const match: JobMatch = {\n      id: uuidv4(),\n      job_id: jobId,\n      candidate_id: candidateId,\n      status: 'applied',\n      score,\n      analysis,\n      created_at: new Date(),\n      updated_at: new Date()\n    };\n\n    jobMatches.push(match);\n    return match;\n  }\n}; "],"names":[],"mappings":";;;AACA;AACA;;;AAEO,MAAM,kBAAkB;IAC7B,MAAM,eAAc,KAAc;QAChC,qBAAqB;QACrB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,IAAI,OAAO;YACT,OAAO,sHAAA,CAAA,iBAAU,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,MAAM,KAAK;QACrD;QACA,OAAO,sHAAA,CAAA,iBAAU;IACnB;IAEA,MAAM,qBAAoB,WAAmB;QAC3C,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACjD,OAAO,sHAAA,CAAA,iBAAU,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,YAAY,KAAK;IAC3D;IAEA,MAAM,mBAAkB,OAAe,EAAE,MAAsB;QAC7D,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACjD,MAAM,QAAQ,sHAAA,CAAA,iBAAU,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC5C,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;QAE5B,MAAM,MAAM,GAAG;QACf,MAAM,UAAU,GAAG,IAAI;QACvB,OAAO;IACT;IAEA,MAAM,qBAAoB,KAAa,EAAE,WAAmB;QAC1D,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,6BAA6B;QAC7B,MAAM,QAAQ,KAAK,MAAM,KAAK,MAAM,KAAK,mCAAmC;QAC5E,MAAM,WAAW;YACf,cAAc,KAAK,MAAM,KAAK,MAAM;YACpC,kBAAkB,KAAK,MAAM,KAAK,MAAM;YACxC,iBAAiB,KAAK,MAAM,KAAK,MAAM;YACvC,gBAAgB,KAAK,MAAM,KAAK,MAAM;QACxC;QAEA,MAAM,QAAkB;YACtB,IAAI,CAAA,GAAA,0KAAA,CAAA,KAAM,AAAD;YACT,QAAQ;YACR,cAAc;YACd,QAAQ;YACR;YACA;YACA,YAAY,IAAI;YAChB,YAAY,IAAI;QAClB;QAEA,sHAAA,CAAA,iBAAU,CAAC,IAAI,CAAC;QAChB,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/hooks/use-matches.ts"],"sourcesContent":["import { useEffect, useCallback } from 'react';\nimport { useAppContext } from '@/contexts/AppContext';\nimport { jobMatchService } from '@/services/jobMatchService';\nimport { JobMatch, JobMatchStatus } from '@/types';\n\nexport function useMatches() {\n  const { state, dispatch } = useAppContext();\n\n  const loadMatches = useCallback(async (jobId: string) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const matches = await jobMatchService.getJobMatches(jobId);\n      dispatch({ type: 'SET_MATCHES', payload: matches });\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to load matches' });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  }, [dispatch]);\n\n  const updateMatchStatus = useCallback(async (matchId: string, status: JobMatchStatus) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const updatedMatch = await jobMatchService.updateMatchStatus(matchId, status);\n      if (updatedMatch) {\n        dispatch({ type: 'UPDATE_MATCH', payload: updatedMatch });\n      }\n      return updatedMatch;\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to update match status' });\n      throw error;\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  }, [dispatch]);\n\n  return {\n    matches: state.matches,\n    loading: state.loading,\n    error: state.error,\n    loadMatches,\n    updateMatchStatus,\n  };\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAGO,SAAS;IACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD;IAExC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO;QACrC,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,UAAU,MAAM,kIAAA,CAAA,kBAAe,CAAC,aAAa,CAAC;YACpD,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAQ;QACnD,EAAE,OAAO,OAAO;YACd,SAAS;gBAAE,MAAM;gBAAa,SAAS;YAAyB;QAClE,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO,SAAiB;QAC5D,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,eAAe,MAAM,kIAAA,CAAA,kBAAe,CAAC,iBAAiB,CAAC,SAAS;YACtE,IAAI,cAAc;gBAChB,SAAS;oBAAE,MAAM;oBAAgB,SAAS;gBAAa;YACzD;YACA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,SAAS;gBAAE,MAAM;gBAAa,SAAS;YAAgC;YACvE,MAAM;QACR,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF,GAAG;QAAC;KAAS;IAEb,OAAO;QACL,SAAS,MAAM,OAAO;QACtB,SAAS,MAAM,OAAO;QACtB,OAAO,MAAM,KAAK;QAClB;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 748, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/services/candidateService.ts"],"sourcesContent":["import { mockCandidates } from '@/lib/mockData';\nimport { Candidate } from '@/types/index';\n\n\nexport const candidateService = {\n  async getAll(): Promise<Candidate[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve([...mockCandidates]), 100);\n    });\n  },\n\n  async create(candidate: Omit<Candidate, 'id' | 'created_at' | 'updated_at'>): Promise<Candidate> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const newCandidate: Candidate = {\n          ...candidate,\n          id: `cand-${Date.now()}`,\n          created_at: new Date(),\n          updated_at: new Date()\n        };\n        resolve(newCandidate);\n      }, 200);\n    });\n  },\n\n  async update(id: string, updates: Partial<Candidate>): Promise<Candidate | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const candidate = mockCandidates.find(c => c.id === id);\n        if (candidate) {\n          const updated = { ...candidate, ...updates, updated_at: new Date() };\n          resolve(updated);\n        } else {\n          resolve(null);\n        }\n      }, 200);\n    });\n  },\n\n  async delete(id: string): Promise<boolean> {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve(true), 200);\n    });\n  }\n};"],"names":[],"mappings":";;;AAAA;;AAIO,MAAM,mBAAmB;IAC9B,MAAM;QACJ,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW,IAAM,QAAQ;uBAAI,sHAAA,CAAA,iBAAc;iBAAC,GAAG;QACjD;IACF;IAEA,MAAM,QAAO,SAA8D;QACzE,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,eAA0B;oBAC9B,GAAG,SAAS;oBACZ,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;oBACxB,YAAY,IAAI;oBAChB,YAAY,IAAI;gBAClB;gBACA,QAAQ;YACV,GAAG;QACL;IACF;IAEA,MAAM,QAAO,EAAU,EAAE,OAA2B;QAClD,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,YAAY,sHAAA,CAAA,iBAAc,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;gBACpD,IAAI,WAAW;oBACb,MAAM,UAAU;wBAAE,GAAG,SAAS;wBAAE,GAAG,OAAO;wBAAE,YAAY,IAAI;oBAAO;oBACnE,QAAQ;gBACV,OAAO;oBACL,QAAQ;gBACV;YACF,GAAG;QACL;IACF;IAEA,MAAM,QAAO,EAAU;QACrB,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW,IAAM,QAAQ,OAAO;QAClC;IACF;AACF","debugId":null}},
    {"offset": {"line": 803, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/hooks/use-candidates.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { useAppContext } from '@/contexts/AppContext';\nimport { Candidate } from '@/types/index';\nimport { mockCandidates } from '@/lib/mockData';\n\nimport { candidateService } from '@/services/candidateService';\n\nexport function useCandidates() {\n  const { state, dispatch } = useAppContext();\n\n  useEffect(() => {\n    loadCandidates();\n  }, []);\n\n  const loadCandidates = async () => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const candidates = await candidateService.getAll();\n      dispatch({ type: 'SET_CANDIDATES', payload: candidates });\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to load candidates' });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const createCandidate = async (candidateData: Omit<Candidate, 'id' | 'created_at' | 'updated_at'>) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const newCandidate = await candidateService.create(candidateData);\n      dispatch({ type: 'ADD_CANDIDATE', payload: newCandidate });\n      return newCandidate;\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to create candidate' });\n      throw error;\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const updateCandidate = async (id: string, updates: Partial<Candidate>) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const updatedCandidate = await candidateService.update(id, updates);\n      if (updatedCandidate) {\n        dispatch({ type: 'UPDATE_CANDIDATE', payload: updatedCandidate });\n      }\n      return updatedCandidate;\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to update candidate' });\n      throw error;\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const deleteCandidate = async (id: string) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      await candidateService.delete(id);\n      dispatch({ type: 'DELETE_CANDIDATE', payload: id });\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to delete candidate' });\n      throw error;\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  return {\n    candidates: state.candidates,\n    loading: state.loading,\n    error: state.error,\n    loadCandidates,\n    createCandidate,\n    updateCandidate,\n    deleteCandidate,\n  };\n}"],"names":[],"mappings":";;;AAAA;AACA;AAIA;;;;AAEO,SAAS;IACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,iBAAiB;QACrB,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,aAAa,MAAM,mIAAA,CAAA,mBAAgB,CAAC,MAAM;YAChD,SAAS;gBAAE,MAAM;gBAAkB,SAAS;YAAW;QACzD,EAAE,OAAO,OAAO;YACd,SAAS;gBAAE,MAAM;gBAAa,SAAS;YAA4B;QACrE,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF;IAEA,MAAM,kBAAkB,OAAO;QAC7B,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,eAAe,MAAM,mIAAA,CAAA,mBAAgB,CAAC,MAAM,CAAC;YACnD,SAAS;gBAAE,MAAM;gBAAiB,SAAS;YAAa;YACxD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,SAAS;gBAAE,MAAM;gBAAa,SAAS;YAA6B;YACpE,MAAM;QACR,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF;IAEA,MAAM,kBAAkB,OAAO,IAAY;QACzC,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,mBAAmB,MAAM,mIAAA,CAAA,mBAAgB,CAAC,MAAM,CAAC,IAAI;YAC3D,IAAI,kBAAkB;gBACpB,SAAS;oBAAE,MAAM;oBAAoB,SAAS;gBAAiB;YACjE;YACA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,SAAS;gBAAE,MAAM;gBAAa,SAAS;YAA6B;YACpE,MAAM;QACR,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF;IAEA,MAAM,kBAAkB,OAAO;QAC7B,IAAI;YACF,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;YAC9C,MAAM,mIAAA,CAAA,mBAAgB,CAAC,MAAM,CAAC;YAC9B,SAAS;gBAAE,MAAM;gBAAoB,SAAS;YAAG;QACnD,EAAE,OAAO,OAAO;YACd,SAAS;gBAAE,MAAM;gBAAa,SAAS;YAA6B;YACpE,MAAM;QACR,SAAU;YACR,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAM;QACjD;IACF;IAEA,OAAO;QACL,YAAY,MAAM,UAAU;QAC5B,SAAS,MAAM,OAAO;QACtB,OAAO,MAAM,KAAK;QAClB;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 932, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/app/jobs/%5Bid%5D/candidates/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useCallback, useMemo, useState } from 'react';\nimport { useParams } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { useMatches } from '@/hooks/use-matches';\nimport { useCandidates } from '@/hooks/use-candidates';\nimport { useToast } from '@/hooks/use-toast';\nimport { ArrowLeft, Users, FileText, Mail, Phone, Calendar } from 'lucide-react';\nimport Link from 'next/link';\nimport { JobMatchStatus } from '@/types';\n// import { PDFViewer } from '@/components/ui/pdf-viewer';\n\nexport default function JobCandidatesPage() {\n  const params = useParams();\n  const jobId = params.id as string;\n  const { matches, loading: matchesLoading, loadMatches, updateMatchStatus } = useMatches();\n  const { candidates, loading: candidatesLoading } = useCandidates();\n  const { toast } = useToast();\n  const [selectedResumeUrl, setSelectedResumeUrl] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (jobId) {\n      loadMatches(jobId);\n    }\n  }, [jobId, loadMatches]);\n\n  const enrichedMatches = useMemo(() => {\n    return matches.map(match => {\n      const candidate = candidates.find(c => c.id === match.candidate_id);\n      return {\n        ...match,\n        candidate\n      };\n    });\n  }, [matches, candidates]);\n\n  const handleStatusChange = useCallback(async (matchId: string, status: JobMatchStatus) => {\n    try {\n      await updateMatchStatus(matchId, status);\n      toast({\n        title: 'Success',\n        description: 'Candidate status updated',\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to update candidate status',\n        variant: 'destructive',\n      });\n    }\n  }, [updateMatchStatus, toast]);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'hired':\n        return 'text-green-500';\n      case 'rejected':\n        return 'text-red-500';\n      case 'interviewing':\n        return 'text-blue-500';\n      case 'offered':\n        return 'text-purple-500';\n      default:\n        return 'text-yellow-500';\n    }\n  };\n\n  if (matchesLoading || candidatesLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-lg\">Loading candidates...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-8\">\n      <div className=\"flex items-center justify-between mb-8\">\n        <div className=\"flex items-center space-x-4\">\n          <Link href={`/`}>\n            <Button variant=\"outline\" size=\"icon\">\n              <ArrowLeft className=\"w-4 h-4\" />\n            </Button>\n          </Link>\n          <h1 className=\"text-2xl font-bold\">Matching Candidates</h1>\n        </div>\n      </div>\n\n      <div className=\"grid gap-6\">\n        {enrichedMatches.length === 0 ? (\n          <Card>\n            <CardContent className=\"py-8 text-center\">\n              <Users className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No matching candidates found</h3>\n              <p className=\"text-gray-500\">Upload CVs to find matching candidates for this position.</p>\n            </CardContent>\n          </Card>\n        ) : (\n          enrichedMatches.map((match) => (\n            <Card key={match.id}>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div>\n                    <h3 className=\"text-lg font-medium\">{match.candidate?.full_name || 'Unknown Candidate'}</h3>\n                    <div className=\"text-sm text-gray-500 space-y-1\">\n                      {match.candidate?.email && (\n                        <div className=\"flex items-center\">\n                          <Mail className=\"w-3 h-3 mr-1\" />\n                          {match.candidate.email}\n                        </div>\n                      )}\n                      {match.candidate?.phone && (\n                        <div className=\"flex items-center\">\n                          <Phone className=\"w-3 h-3 mr-1\" />\n                          {match.candidate.phone}\n                        </div>\n                      )}\n                      {match.candidate?.created_at && (\n                        <div className=\"flex items-center\">\n                          <Calendar className=\"w-3 h-3 mr-1\" />\n                          Added {new Date(match.candidate.created_at).toLocaleDateString()}\n                        </div>\n                      )}\n                    </div>\n                    <p className={`text-sm ${getStatusColor(match.status)} mt-1`}>\n                      Status: {match.status.charAt(0).toUpperCase() + match.status.slice(1)}\n                    </p>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => handleStatusChange(match.id, 'interviewing')}\n                      disabled={match.status === 'interviewing'}\n                    >\n                      Interview\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => handleStatusChange(match.id, 'offered')}\n                      disabled={match.status === 'offered'}\n                    >\n                      Offer\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => handleStatusChange(match.id, 'hired')}\n                      disabled={match.status === 'hired'}\n                    >\n                      Hire\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => handleStatusChange(match.id, 'rejected')}\n                      disabled={match.status === 'rejected'}\n                    >\n                      Reject\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Match Score: {((match.score || 0) * 100).toFixed(1)}%</h4>\n                    <Progress value={(match.score || 0) * 100} className=\"w-full\" />\n                  </div>\n\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <div>\n                      <h4 className=\"font-medium mb-2\">Skills Match</h4>\n                      <Progress value={match.analysis.skills_match * 100} className=\"w-full\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium mb-2\">Experience Match</h4>\n                      <Progress value={match.analysis.experience_match * 100} className=\"w-full\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium mb-2\">Education Match</h4>\n                      <Progress value={match.analysis.education_match * 100} className=\"w-full\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium mb-2\">Location Match</h4>\n                      <Progress value={match.analysis.location_match * 100} className=\"w-full\" />\n                    </div>\n                  </div>\n\n                  {match.candidate?.resume_url && (\n                    <div className=\"flex items-center justify-between bg-gray-50 p-3 rounded-lg\">\n                      <div className=\"flex items-center\">\n                        <FileText className=\"w-4 h-4 mr-2 text-gray-500\" />\n                        <span className=\"text-sm text-gray-600\">Resume available</span>\n                      </div>                      <Button \n                        variant=\"outline\" \n                        size=\"sm\"\n                        onClick={() => match.candidate?.resume_url && setSelectedResumeUrl(match.candidate.resume_url)}\n                      >\n                        View Resume\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))\n        )}\n      </div>\n\n      {/* {selectedResumeUrl && (\n        <PDFViewer\n          url={selectedResumeUrl}\n          isOpen={!!selectedResumeUrl}\n          onClose={() => setSelectedResumeUrl(null)}\n        />\n      )} */}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}