{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/services/userService.ts"],"sourcesContent":["import { User } from '@/types/index';\nimport { storage, COLLECTIONS } from '@/lib/storage';\nimport { mockCompanies } from '@/lib/mockData';\n\n/**\n * User Service with persistent localStorage-based storage\n * \n * Provides comprehensive user management functionality including:\n * - CRUD operations with automatic persistence\n * - Search and filtering capabilities\n * - Bulk operations for efficient data handling\n * - Analytics and statistics\n * - Company relationship management\n * \n * All operations are asynchronous and simulate realistic database latency\n * Data is automatically persisted to localStorage and survives page refreshes\n */\n\n// Helper function to validate user data\nconst validateUserData = (user: Partial<User>): string[] => {\n  const errors: string[] = [];\n  \n  if (user.full_name !== undefined && !user.full_name?.trim()) {\n    errors.push('Full name is required');\n  }\n  \n  if (user.email !== undefined) {\n    if (!user.email?.trim()) {\n      errors.push('Email is required');\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(user.email)) {\n      errors.push('Invalid email format');\n    }\n  }\n  \n  if (user.company_id !== undefined && !user.company_id?.trim()) {\n    errors.push('Company ID is required');\n  }\n  \n  return errors;\n};\n\n// Helper function to check if email is already taken\nconst isEmailTaken = async (email: string, excludeId?: string): Promise<boolean> => {\n  const users = storage.getCollection<User>(COLLECTIONS.USERS);\n  return users.some(u => \n    u.email.toLowerCase() === email.toLowerCase() && \n    u.id !== excludeId\n  );\n};\n\nexport const userService = {\n  async getAll(): Promise<User[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const users = storage.getCollection<User>(COLLECTIONS.USERS);\n        const usersWithCompanies = users.map((user: User) => ({\n          ...user,\n          company: mockCompanies.find(c => c.id === user.company_id)\n        }));\n        resolve(usersWithCompanies);\n      }, 100);\n    });\n  },\n\n  async getById(id: string): Promise<User | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const user = storage.getFromCollection<User>(COLLECTIONS.USERS, id);\n        if (user) {\n          const userWithCompany = {\n            ...user,\n            company: mockCompanies.find(c => c.id === user.company_id)\n          };\n          resolve(userWithCompany);\n        } else {\n          resolve(null);\n        }\n      }, 100);\n    });\n  },\n\n  async getByCompany(companyId: string): Promise<User[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const companyUsers = storage\n          .searchCollection<User>(COLLECTIONS.USERS, (u: User) => u.company_id === companyId)\n          .map((user: User) => ({\n            ...user,\n            company: mockCompanies.find(c => c.id === user.company_id)\n          }));\n        resolve(companyUsers);\n      }, 100);\n    });\n  },\n  async create(user: Omit<User, 'id' | 'created_at' | 'updated_at'>): Promise<User> {\n    return new Promise(async (resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          // Validate user data\n          const validationErrors = validateUserData(user);\n          if (validationErrors.length > 0) {\n            reject(new Error(`Validation failed: ${validationErrors.join(', ')}`));\n            return;\n          }\n\n          // Check if email is already taken\n          const emailTaken = await isEmailTaken(user.email);\n          if (emailTaken) {\n            reject(new Error('Email address is already in use'));\n            return;\n          }\n\n          const newUser: User = {\n            ...user,\n            id: `user-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n            created_at: new Date(),\n            updated_at: new Date()\n          };\n          \n          const savedUser = storage.addToCollection<User>(COLLECTIONS.USERS, newUser);\n          resolve(savedUser);\n        } catch (error) {\n          reject(error);\n        }\n      }, 200);\n    });\n  },\n\n  async update(id: string, updates: Partial<User>): Promise<User | null> {\n    return new Promise(async (resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          // Validate update data\n          const validationErrors = validateUserData(updates);\n          if (validationErrors.length > 0) {\n            reject(new Error(`Validation failed: ${validationErrors.join(', ')}`));\n            return;\n          }\n\n          // Check if email is already taken (if email is being updated)\n          if (updates.email) {\n            const emailTaken = await isEmailTaken(updates.email, id);\n            if (emailTaken) {\n              reject(new Error('Email address is already in use'));\n              return;\n            }\n          }\n\n          const updatedUser = storage.updateInCollection<User>(COLLECTIONS.USERS, id, updates);\n          resolve(updatedUser);\n        } catch (error) {\n          reject(error);\n        }\n      }, 200);\n    });\n  },\n\n  async delete(id: string): Promise<boolean> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const success = storage.removeFromCollection<User>(COLLECTIONS.USERS, id);\n        resolve(success);\n      }, 200);\n    });\n  },\n\n  // Additional utility methods for better user management\n  async getByEmail(email: string): Promise<User | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const users = storage.searchCollection<User>(\n          COLLECTIONS.USERS, \n          (u: User) => u.email.toLowerCase() === email.toLowerCase()\n        );\n        const user = users.length > 0 ? users[0] : null;\n        if (user) {\n          const userWithCompany = {\n            ...user,\n            company: mockCompanies.find(c => c.id === user.company_id)\n          };\n          resolve(userWithCompany);\n        } else {\n          resolve(null);\n        }\n      }, 100);\n    });\n  },\n\n  async getByRole(role: string): Promise<User[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const roleUsers = storage\n          .searchCollection<User>(COLLECTIONS.USERS, (u: User) => u.role === role)\n          .map((user: User) => ({\n            ...user,\n            company: mockCompanies.find(c => c.id === user.company_id)\n          }));\n        resolve(roleUsers);\n      }, 100);\n    });\n  },\n\n  async updateLastLogin(id: string): Promise<void> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const user = storage.getFromCollection<User>(COLLECTIONS.USERS, id);\n        if (user) {\n          storage.updateInCollection<User>(COLLECTIONS.USERS, id, {\n            last_login: new Date(),\n            login_count: (user.login_count || 0) + 1\n          });\n        }\n        resolve();\n      }, 100);\n    });\n  },\n  async search(query: string): Promise<User[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const lowerQuery = query.toLowerCase();\n        const matchingUsers = storage\n          .searchCollection<User>(COLLECTIONS.USERS, (u: User) => \n            u.full_name.toLowerCase().includes(lowerQuery) ||\n            u.email.toLowerCase().includes(lowerQuery) ||\n            (u.profile?.phone?.includes(query) || false)\n          )\n          .map((user: User) => ({\n            ...user,\n            company: mockCompanies.find(c => c.id === user.company_id)\n          }));\n        resolve(matchingUsers);\n      }, 150);\n    });\n  },\n\n  // Bulk operations\n  async bulkCreate(users: Omit<User, 'id' | 'created_at' | 'updated_at'>[]): Promise<User[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const createdUsers: User[] = [];\n        users.forEach(user => {\n          const newUser: User = {\n            ...user,\n            id: `user-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n            created_at: new Date(),\n            updated_at: new Date()\n          };\n          const savedUser = storage.addToCollection<User>(COLLECTIONS.USERS, newUser);\n          createdUsers.push(savedUser);\n        });\n        resolve(createdUsers);\n      }, 300);\n    });\n  },\n\n  async bulkUpdate(updates: { id: string; data: Partial<User> }[]): Promise<(User | null)[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const updatedUsers = updates.map(({ id, data }) => \n          storage.updateInCollection<User>(COLLECTIONS.USERS, id, data)\n        );\n        resolve(updatedUsers);\n      }, 300);\n    });\n  },\n\n  // Statistics and analytics\n  async getStats(): Promise<{\n    total: number;\n    active: number;\n    inactive: number;\n    byRole: Record<string, number>;\n    byCompany: Record<string, number>;\n  }> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const users = storage.getCollection<User>(COLLECTIONS.USERS);\n        const stats = {\n          total: users.length,\n          active: users.filter(u => u.is_active).length,\n          inactive: users.filter(u => !u.is_active).length,\n          byRole: users.reduce((acc, user) => {\n            acc[user.role] = (acc[user.role] || 0) + 1;\n            return acc;\n          }, {} as Record<string, number>),\n          byCompany: users.reduce((acc, user) => {\n            const company = mockCompanies.find(c => c.id === user.company_id);\n            const companyName = company?.name || 'Unknown';\n            acc[companyName] = (acc[companyName] || 0) + 1;\n            return acc;\n          }, {} as Record<string, number>)\n        };\n        resolve(stats);\n      }, 100);\n    });\n  },\n\n  // Helper function to validate user data\n  validateUserData(user: Partial<User>): string[] {\n    const errors: string[] = [];\n    \n    if (user.full_name !== undefined && !user.full_name?.trim()) {\n      errors.push('Full name is required');\n    }\n    \n    if (user.email !== undefined) {\n      if (!user.email?.trim()) {\n        errors.push('Email is required');\n      } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(user.email)) {\n        errors.push('Invalid email format');\n      }\n    }\n    \n    if (user.company_id !== undefined && !user.company_id?.trim()) {\n      errors.push('Company ID is required');\n    }\n    \n    return errors;\n  },\n\n  // Helper function to check if email is already taken\n  async isEmailTaken(email: string, excludeId?: string): Promise<boolean> {\n    const users = storage.getCollection<User>(COLLECTIONS.USERS);\n    return users.some(u => \n      u.email.toLowerCase() === email.toLowerCase() && \n      u.id !== excludeId\n    );\n  }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/admin/AdminGuard.tsx"],"sourcesContent":["\"use client\";\n\nimport { ReactNode } from 'react';\nimport { useAppContext } from '@/contexts/AppContext';\nimport { Shield, AlertCircle, Home } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\n\ninterface AdminGuardProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  requireRole?: 'admin' | 'recruiter' | 'viewer';\n  message?: string;\n}\n\nexport function AdminGuard({ \n  children, \n  fallback, \n  requireRole = 'admin',\n  message = \"You don't have permission to access this section.\"\n}: AdminGuardProps) {\n  const { state } = useAppContext();\n\n  // Check if user is authenticated and has required role\n  const hasRequiredRole = () => {\n    if (!state.currentUser) return false;\n    \n    const userRole = state.currentUser.role;\n    \n    // Admin has access to everything\n    if (userRole === 'admin') return true;\n    \n    // For other roles, check exact match\n    return userRole === requireRole;\n  };\n\n  if (!state.initialized) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"w-6 h-6 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n        <span className=\"ml-2 text-gray-600\">Loading...</span>\n      </div>\n    );\n  }\n\n  if (!state.currentUser) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <Card className=\"p-8 max-w-md mx-auto text-center\">\n          <AlertCircle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Authentication Required</h2>\n          <p className=\"text-gray-600 mb-6\">\n            You need to be logged in to access this page.\n          </p>\n          <Button className=\"w-full\">\n            <Home className=\"w-4 h-4 mr-2\" />\n            Go to Dashboard\n          </Button>\n        </Card>\n      </div>\n    );\n  }\n\n  if (!hasRequiredRole()) {\n    if (fallback) {\n      return <>{fallback}</>;\n    }\n\n    const getRoleDisplayName = (role: string) => {\n      switch (role) {\n        case 'admin': return 'Administrator';\n        case 'recruiter': return 'Recruiter';\n        case 'viewer': return 'Viewer';\n        default: return role;\n      }\n    };\n\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <Card className=\"p-8 max-w-md mx-auto text-center\">\n          <Shield className=\"w-16 h-16 text-yellow-500 mx-auto mb-4\" />\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n            {getRoleDisplayName(requireRole)} Access Required\n          </h2>\n          <p className=\"text-gray-600 mb-6\">\n            {message}\n          </p>\n          <div className=\"space-y-2\">\n            <p className=\"text-sm text-gray-500\">\n              Required role: <span className=\"font-medium\">{getRoleDisplayName(requireRole)}</span>\n            </p>\n            <p className=\"text-sm text-gray-500\">\n              Current role: <span className=\"font-medium\">{getRoleDisplayName(state.currentUser.role)}</span>\n            </p>\n            <p className=\"text-sm text-gray-500\">\n              User: <span className=\"font-medium\">{state.currentUser.full_name}</span>\n            </p>\n          </div>\n          <Button \n            className=\"w-full mt-6\" \n            onClick={() => window.history.back()}\n          >\n            <Home className=\"w-4 h-4 mr-2\" />\n            Go Back\n          </Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAAA;AACA;AACA;AANA;;;;;;AAeO,SAAS,WAAW,EACzB,QAAQ,EACR,QAAQ,EACR,cAAc,OAAO,EACrB,UAAU,mDAAmD,EAC7C;IAChB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD;IAE9B,uDAAuD;IACvD,MAAM,kBAAkB;QACtB,IAAI,CAAC,MAAM,WAAW,EAAE,OAAO;QAE/B,MAAM,WAAW,MAAM,WAAW,CAAC,IAAI;QAEvC,iCAAiC;QACjC,IAAI,aAAa,SAAS,OAAO;QAEjC,qCAAqC;QACrC,OAAO,aAAa;IACtB;IAEA,IAAI,CAAC,MAAM,WAAW,EAAE;QACtB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAK,WAAU;8BAAqB;;;;;;;;;;;;IAG3C;IAEA,IAAI,CAAC,MAAM,WAAW,EAAE;QACtB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;kCACvB,8OAAC;wBAAG,WAAU;kCAAwC;;;;;;kCACtD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAGlC,8OAAC,kIAAA,CAAA,SAAM;wBAAC,WAAU;;0CAChB,8OAAC,mMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;IAM3C;IAEA,IAAI,CAAC,mBAAmB;QACtB,IAAI,UAAU;YACZ,qBAAO;0BAAG;;QACZ;QAEA,MAAM,qBAAqB,CAAC;YAC1B,OAAQ;gBACN,KAAK;oBAAS,OAAO;gBACrB,KAAK;oBAAa,OAAO;gBACzB,KAAK;oBAAU,OAAO;gBACtB;oBAAS,OAAO;YAClB;QACF;QAEA,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,sMAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;kCAClB,8OAAC;wBAAG,WAAU;;4BACX,mBAAmB;4BAAa;;;;;;;kCAEnC,8OAAC;wBAAE,WAAU;kCACV;;;;;;kCAEH,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;;oCAAwB;kDACpB,8OAAC;wCAAK,WAAU;kDAAe,mBAAmB;;;;;;;;;;;;0CAEnE,8OAAC;gCAAE,WAAU;;oCAAwB;kDACrB,8OAAC;wCAAK,WAAU;kDAAe,mBAAmB,MAAM,WAAW,CAAC,IAAI;;;;;;;;;;;;0CAExF,8OAAC;gCAAE,WAAU;;oCAAwB;kDAC7B,8OAAC;wCAAK,WAAU;kDAAe,MAAM,WAAW,CAAC,SAAS;;;;;;;;;;;;;;;;;;kCAGpE,8OAAC,kIAAA,CAAA,SAAM;wBACL,WAAU;wBACV,SAAS,IAAM,OAAO,OAAO,CAAC,IAAI;;0CAElC,8OAAC,mMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;IAM3C;IAEA,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n} "],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 710, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/services/companyService.ts"],"sourcesContent":["import { Company } from '@/types/index';\nimport { mockCompanies } from '@/lib/mockData';\n\nconst companies = [...mockCompanies];\n\nexport const companyService = {\n  async getAll(): Promise<Company[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve([...companies]), 100);\n    });\n  },\n\n  async getById(id: string): Promise<Company | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const company = companies.find(c => c.id === id) || null;\n        resolve(company);\n      }, 100);\n    });\n  },\n\n  async create(company: Omit<Company, 'id' | 'created_at' | 'updated_at'>): Promise<Company> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const newCompany: Company = {\n          ...company,\n          id: `comp-${Date.now()}`,\n          created_at: new Date(),\n          updated_at: new Date()\n        };\n        companies.push(newCompany);\n        resolve(newCompany);\n      }, 200);\n    });\n  },\n\n  async update(id: string, updates: Partial<Company>): Promise<Company | null> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const index = companies.findIndex(c => c.id === id);\n        if (index !== -1) {\n          companies[index] = { \n            ...companies[index], \n            ...updates, \n            updated_at: new Date() \n          };\n          resolve(companies[index]);\n        } else {\n          resolve(null);\n        }\n      }, 200);\n    });\n  },\n\n  async delete(id: string): Promise<boolean> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const index = companies.findIndex(c => c.id === id);\n        if (index !== -1) {\n          companies.splice(index, 1);\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      }, 200);\n    });\n  }\n};"],"names":[],"mappings":";;;AACA;;AAEA,MAAM,YAAY;OAAI,sHAAA,CAAA,gBAAa;CAAC;AAE7B,MAAM,iBAAiB;IAC5B,MAAM;QACJ,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW,IAAM,QAAQ;uBAAI;iBAAU,GAAG;QAC5C;IACF;IAEA,MAAM,SAAQ,EAAU;QACtB,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,UAAU,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,OAAO;gBACpD,QAAQ;YACV,GAAG;QACL;IACF;IAEA,MAAM,QAAO,OAA0D;QACrE,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,aAAsB;oBAC1B,GAAG,OAAO;oBACV,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;oBACxB,YAAY,IAAI;oBAChB,YAAY,IAAI;gBAClB;gBACA,UAAU,IAAI,CAAC;gBACf,QAAQ;YACV,GAAG;QACL;IACF;IAEA,MAAM,QAAO,EAAU,EAAE,OAAyB;QAChD,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,QAAQ,UAAU,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;gBAChD,IAAI,UAAU,CAAC,GAAG;oBAChB,SAAS,CAAC,MAAM,GAAG;wBACjB,GAAG,SAAS,CAAC,MAAM;wBACnB,GAAG,OAAO;wBACV,YAAY,IAAI;oBAClB;oBACA,QAAQ,SAAS,CAAC,MAAM;gBAC1B,OAAO;oBACL,QAAQ;gBACV;YACF,GAAG;QACL;IACF;IAEA,MAAM,QAAO,EAAU;QACrB,OAAO,IAAI,QAAQ,CAAC;YAClB,WAAW;gBACT,MAAM,QAAQ,UAAU,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;gBAChD,IAAI,UAAU,CAAC,GAAG;oBAChB,UAAU,MAAM,CAAC,OAAO;oBACxB,QAAQ;gBACV,OAAO;oBACL,QAAQ;gBACV;YACF,GAAG;QACL;IACF;AACF","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/users/UserDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { User, Company, UserRole, UserStatus } from '@/types/index';\nimport { userService } from '@/services/userService';\nimport { companyService } from '@/services/companyService';\nimport { useAppContext } from '@/contexts/AppContext';\nimport { \n  User as UserIcon, \n  Mail, \n  Building, \n  Shield, \n  Eye, \n  UserCheck,\n  Save,\n  X,\n  AlertCircle\n} from 'lucide-react';\n\ninterface UserDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  user?: User | null;\n  onSave: (user: User) => void;\n}\n\nexport function UserDialog({ isOpen, onClose, user, onSave }: UserDialogProps) {\n  const { state } = useAppContext();\n  const [loading, setLoading] = useState(false);\n  const [companies, setCompanies] = useState<Company[]>([]);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  \n  const [formData, setFormData] = useState({\n    full_name: '',\n    email: '',\n    role: 'viewer' as UserRole,\n    company_id: '',\n    is_active: true,\n    status: 'active' as UserStatus,\n    phone: '',\n    bio: '',\n    timezone: ''\n  });\n\n  const isEditing = !!user;\n  const isCurrentUser = user?.id === state.currentUser?.id;\n  const canEditRole = state.currentUser?.role === 'admin' && !isCurrentUser;\n\n  useEffect(() => {\n    if (isOpen) {\n      loadCompanies();\n      if (user) {\n        setFormData({\n          full_name: user.full_name,\n          email: user.email,\n          role: user.role,\n          company_id: user.company_id,\n          is_active: user.is_active,\n          status: user.status || 'active',\n          phone: user.profile?.phone || '',\n          bio: user.profile?.bio || '',\n          timezone: user.profile?.timezone || ''\n        });\n      } else {\n        // Reset form for new user\n        setFormData({\n          full_name: '',\n          email: '',\n          role: 'viewer',\n          company_id: state.currentCompany?.id || '',\n          is_active: true,\n          status: 'active',\n          phone: '',\n          bio: '',\n          timezone: ''\n        });\n      }\n      setErrors({});\n    }\n  }, [isOpen, user, state.currentCompany]);\n\n  const loadCompanies = async () => {\n    try {\n      const data = await companyService.getAll();\n      setCompanies(data);\n    } catch (error) {\n      console.error('Failed to load companies:', error);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.full_name.trim()) {\n      newErrors.full_name = 'Full name is required';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.company_id) {\n      newErrors.company_id = 'Company is required';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    try {\n      setLoading(true);\n\n      let savedUser: User;\n      \n      if (isEditing && user) {\n        // Update existing user\n        savedUser = await userService.update(user.id, {\n          full_name: formData.full_name,\n          email: formData.email,\n          role: formData.role,\n          company_id: formData.company_id,\n          is_active: formData.is_active,\n          status: formData.status\n        }) as User;\n      } else {\n        // Create new user\n        savedUser = await userService.create({\n          full_name: formData.full_name,\n          email: formData.email,\n          role: formData.role,\n          company_id: formData.company_id,\n          is_active: formData.is_active,\n          status: formData.status,\n          password_hash: 'temp_hash', // In real app, this would be handled differently\n          login_count: 0\n        });\n      }\n\n      onSave(savedUser);\n      onClose();\n    } catch (error) {\n      console.error('Failed to save user:', error);\n      setErrors({ submit: 'Failed to save user. Please try again.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const getRoleIcon = (role: UserRole) => {\n    switch (role) {\n      case 'admin': return <Shield className=\"w-4 h-4\" />;\n      case 'recruiter': return <UserIcon className=\"w-4 h-4\" />;\n      case 'viewer': return <Eye className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getRoleColor = (role: UserRole) => {\n    switch (role) {\n      case 'admin': return 'bg-red-100 text-red-800';\n      case 'recruiter': return 'bg-blue-100 text-blue-800';\n      case 'viewer': return 'bg-gray-100 text-gray-800';\n    }\n  };  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl max-h-[95vh] overflow-hidden flex flex-col\">\n        <DialogHeader className=\"pb-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                <UserIcon className=\"w-5 h-5 text-blue-600\" />\n              </div>\n              <div>\n                <DialogTitle className=\"text-xl font-semibold text-gray-900\">\n                  {isEditing ? 'Edit User' : 'Add New User'}\n                </DialogTitle>\n                <p className=\"text-sm text-gray-500\">\n                  {isEditing ? 'Update user details and permissions' : 'Create a new user account'}\n                </p>\n              </div>\n            </div>\n          </div>\n        </DialogHeader>\n\n        {/* Action Buttons */}\n        <div className=\"flex items-center justify-end space-x-3 pb-4 border-b border-gray-200\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={onClose}\n            disabled={loading}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={handleSubmit}\n            disabled={loading}\n            className=\"flex items-center space-x-2\"\n          >\n            {loading ? (\n              <>\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                <span>Saving...</span>\n              </>\n            ) : (\n              <>\n                <Save className=\"w-4 h-4\" />\n                <span>{isEditing ? 'Update User' : 'Create User'}</span>\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-y-auto py-4\">            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {/* Basic Information */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium text-gray-900 flex items-center space-x-2\">\n                  <UserIcon className=\"w-5 h-5\" />\n                  <span>Basic Information</span>\n                </h3>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Full Name *\n                    </label>\n                    <Input\n                      value={formData.full_name}\n                      onChange={(e) => handleInputChange('full_name', e.target.value)}\n                      placeholder=\"Enter full name\"\n                      className={errors.full_name ? 'border-red-500' : ''}\n                    />\n                    {errors.full_name && (\n                      <p className=\"text-red-500 text-xs mt-1 flex items-center\">\n                        <AlertCircle className=\"w-3 h-3 mr-1\" />\n                        {errors.full_name}\n                      </p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Email Address *\n                    </label>\n                    <Input\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange('email', e.target.value)}\n                      placeholder=\"Enter email address\"\n                      className={errors.email ? 'border-red-500' : ''}\n                    />\n                    {errors.email && (\n                      <p className=\"text-red-500 text-xs mt-1 flex items-center\">\n                        <AlertCircle className=\"w-3 h-3 mr-1\" />\n                        {errors.email}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Phone Number\n                  </label>\n                  <Input\n                    value={formData.phone}\n                    onChange={(e) => handleInputChange('phone', e.target.value)}\n                    placeholder=\"Enter phone number\"\n                  />\n                </div>\n              </div>\n\n              {/* Company & Role */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium text-gray-900 flex items-center space-x-2\">\n                  <Building className=\"w-5 h-5\" />\n                  <span>Company & Role</span>\n                </h3>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Company *\n                    </label>\n                    <select\n                      value={formData.company_id}\n                      onChange={(e) => handleInputChange('company_id', e.target.value)}\n                      className={`w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors ${\n                        errors.company_id ? 'border-red-500' : ''\n                      }`}\n                    >\n                      <option value=\"\">Select a company</option>\n                      {companies.map((company) => (\n                        <option key={company.id} value={company.id}>\n                          {company.name}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.company_id && (\n                      <p className=\"text-red-500 text-xs mt-1 flex items-center\">\n                        <AlertCircle className=\"w-3 h-3 mr-1\" />\n                        {errors.company_id}\n                      </p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Role\n                    </label>\n                    <select\n                      value={formData.role}\n                      onChange={(e) => handleInputChange('role', e.target.value as UserRole)}\n                      disabled={!canEditRole}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 transition-colors\"\n                    >\n                      <option value=\"viewer\">Viewer</option>\n                      <option value=\"recruiter\">Recruiter</option>\n                      <option value=\"admin\">Admin</option>\n                    </select>\n                    {!canEditRole && isCurrentUser && (\n                      <p className=\"text-xs text-amber-600 mt-1 flex items-center\">\n                        <AlertCircle className=\"w-3 h-3 mr-1\" />\n                        You cannot change your own role\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-4\">\n                  <Badge className={`${getRoleColor(formData.role)} flex items-center gap-2`}>\n                    {getRoleIcon(formData.role)}\n                    <span className=\"capitalize\">{formData.role}</span>\n                  </Badge>\n                </div>\n              </div>\n\n              {/* Status & Settings */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium text-gray-900 flex items-center space-x-2\">\n                  <UserCheck className=\"w-5 h-5\" />\n                  <span>Status & Settings</span>\n                </h3>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Status\n                    </label>\n                    <select\n                      value={formData.status}\n                      onChange={(e) => handleInputChange('status', e.target.value as UserStatus)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    >\n                      <option value=\"active\">Active</option>\n                      <option value=\"inactive\">Inactive</option>\n                      <option value=\"suspended\">Suspended</option>\n                      <option value=\"pending\">Pending</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Timezone\n                    </label>\n                    <Input\n                      value={formData.timezone}\n                      onChange={(e) => handleInputChange('timezone', e.target.value)}\n                      placeholder=\"e.g., America/New_York\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-md\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"is_active\"\n                    checked={formData.is_active}\n                    onChange={(e) => handleInputChange('is_active', e.target.checked)}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <label htmlFor=\"is_active\" className=\"text-sm font-medium text-gray-700\">\n                    Account is active and can sign in\n                  </label>\n                </div>\n              </div>\n\n              {/* Bio */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Bio\n                </label>\n                <textarea\n                  value={formData.bio}\n                  onChange={(e) => handleInputChange('bio', e.target.value)}\n                  placeholder=\"Enter user bio or description\"\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none\"\n                />\n              </div>\n\n              {/* Error Message */}\n              {errors.submit && (\n                <div className=\"flex items-center space-x-2 text-red-600 bg-red-50 p-4 rounded-md border border-red-200\">\n                  <AlertCircle className=\"w-5 h-5 flex-shrink-0\" />\n                  <span className=\"text-sm\">{errors.submit}</span>\n                </div>\n              )}\n            </form>\n          </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1707, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/users/UserDetails.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Card } from '@/components/ui/card';\nimport { User, UserActivity } from '@/types/index';\nimport { useAppContext } from '@/contexts/AppContext';\nimport { \n  User as UserIcon, \n  Mail, \n  Phone, \n  Building, \n  Shield, \n  Eye, \n  Calendar,\n  Clock,\n  Activity,\n  MapPin,\n  Edit,\n  Trash2,\n  ChevronLeft,\n  AlertCircle,\n  CheckCircle,\n  XCircle,\n  UserCheck\n} from 'lucide-react';\n\ninterface UserDetailsProps {\n  user: User;\n  onEdit: () => void;\n  onDelete: () => void;\n  onBack: () => void;\n}\n\n// Mock user activity data - in a real app, this would come from an API\nconst mockUserActivity: UserActivity[] = [\n  {\n    id: '1',\n    user_id: 'user1',\n    action: 'login',\n    resource_type: 'session',\n    details: { ip_address: '192.168.1.1', user_agent: 'Chrome/91.0' },\n    created_at: new Date('2024-01-15T10:30:00'),\n  },\n  {\n    id: '2',\n    user_id: 'user1',\n    action: 'create',\n    resource_type: 'job',\n    resource_id: 'job-123',\n    details: { job_title: 'Software Engineer' },\n    created_at: new Date('2024-01-15T11:45:00'),\n  },\n  {\n    id: '3',\n    user_id: 'user1',\n    action: 'update',\n    resource_type: 'candidate',\n    resource_id: 'candidate-456',\n    details: { field: 'status', old_value: 'new', new_value: 'reviewed' },\n    created_at: new Date('2024-01-15T14:20:00'),\n  }\n];\n\nexport function UserDetails({ user, onEdit, onDelete, onBack }: UserDetailsProps) {\n  const { state } = useAppContext();\n  const [activities, setActivities] = useState<UserActivity[]>([]);\n  const [loading, setLoading] = useState(true);\n  const isCurrentUser = user.id === state.currentUser?.id;\n  const canEdit = state.currentUser?.role === 'admin' || isCurrentUser;\n  const canDelete = state.currentUser?.role === 'admin' && !isCurrentUser;\n\n  const loadUserActivities = useCallback(async () => {\n    try {\n      setLoading(true);\n      // In a real app, this would be an API call\n      setTimeout(() => {\n        setActivities(mockUserActivity.filter(activity => activity.user_id === user.id));\n        setLoading(false);\n      }, 500);\n    } catch (error) {\n      console.error('Failed to load user activities:', error);\n      setLoading(false);\n    }\n  }, [user.id]);\n\n  useEffect(() => {\n    loadUserActivities();\n  }, [loadUserActivities]);\n\n  const getRoleIcon = (role: string) => {\n    switch (role) {\n      case 'admin': return <Shield className=\"w-5 h-5\" />;\n      case 'recruiter': return <UserIcon className=\"w-5 h-5\" />;\n      case 'viewer': return <Eye className=\"w-5 h-5\" />;\n      default: return <UserIcon className=\"w-5 h-5\" />;\n    }\n  };\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case 'admin': return 'bg-red-100 text-red-800';\n      case 'recruiter': return 'bg-blue-100 text-blue-800';\n      case 'viewer': return 'bg-gray-100 text-gray-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusIcon = (status?: string) => {\n    switch (status) {\n      case 'active': return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\n      case 'inactive': return <XCircle className=\"w-4 h-4 text-gray-600\" />;\n      case 'suspended': return <AlertCircle className=\"w-4 h-4 text-red-600\" />;\n      case 'pending': return <Clock className=\"w-4 h-4 text-yellow-600\" />;\n      default: return <UserCheck className=\"w-4 h-4 text-gray-600\" />;\n    }\n  };\n\n  const getStatusColor = (status?: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'inactive': return 'bg-gray-100 text-gray-800';\n      case 'suspended': return 'bg-red-100 text-red-800';\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatActivityAction = (activity: UserActivity) => {\n    const action = activity.action.charAt(0).toUpperCase() + activity.action.slice(1);\n    const resource = activity.resource_type;\n    const resourceId = activity.resource_id ? ` (${activity.resource_id})` : '';\n    \n    return `${action} ${resource}${resourceId}`;\n  };\n\n  const getActivityIcon = (action: string) => {\n    switch (action) {\n      case 'login': return <UserCheck className=\"w-4 h-4 text-green-600\" />;\n      case 'create': return <CheckCircle className=\"w-4 h-4 text-blue-600\" />;\n      case 'update': return <Edit className=\"w-4 h-4 text-yellow-600\" />;\n      case 'delete': return <Trash2 className=\"w-4 h-4 text-red-600\" />;\n      default: return <Activity className=\"w-4 h-4 text-gray-600\" />;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <h1 className=\"text-3xl font-bold\">User Details</h1>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          {canDelete && (\n            <Button\n              variant=\"outline\"\n              onClick={onDelete}\n              className=\"flex items-center space-x-2 text-red-600 hover:text-red-700 hover:bg-red-50\"\n            >\n              <Trash2 className=\"w-4 h-4\" />\n              <span>Delete</span>\n            </Button>\n          )}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* User Information */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Basic Info Card */}\n          <Card className=\"p-6\">\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center\">\n                <UserIcon className=\"w-8 h-8 text-blue-600\" />\n              </div>\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-3 mb-2\">\n                  <h2 className=\"text-2xl font-semibold text-gray-900\">{user.full_name}</h2>\n                  <Badge className={`${getRoleColor(user.role)} flex items-center gap-1`}>\n                    {getRoleIcon(user.role)}\n                    {user.role}\n                  </Badge>\n                  <Badge className={`${getStatusColor(user.status)} flex items-center gap-1`}>\n                    {getStatusIcon(user.status)}\n                    {user.status || 'active'}\n                  </Badge>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center text-gray-600\">\n                    <Mail className=\"w-4 h-4 mr-2\" />\n                    <span>{user.email}</span>\n                  </div>\n                  {user.profile?.phone && (\n                    <div className=\"flex items-center text-gray-600\">\n                      <Phone className=\"w-4 h-4 mr-2\" />\n                      <span>{user.profile.phone}</span>\n                    </div>\n                  )}\n                  <div className=\"flex items-center text-gray-600\">\n                    <Building className=\"w-4 h-4 mr-2\" />\n                    <span>{user.company?.name}</span>\n                  </div>\n                  {user.profile?.timezone && (\n                    <div className=\"flex items-center text-gray-600\">\n                      <MapPin className=\"w-4 h-4 mr-2\" />\n                      <span>{user.profile.timezone}</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            {user.profile?.bio && (\n              <div className=\"mt-4 pt-4 border-t border-gray-200\">\n                <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Bio</h3>\n                <p className=\"text-gray-600\">{user.profile.bio}</p>\n              </div>\n            )}\n          </Card>\n\n          {/* Account Stats */}\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Account Statistics</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">{user.login_count || 0}</div>\n                <div className=\"text-sm text-gray-600\">Total Logins</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {user.last_login ? new Date(user.last_login).toLocaleDateString() : 'Never'}\n                </div>\n                <div className=\"text-sm text-gray-600\">Last Login</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">\n                  {new Date(user.created_at).toLocaleDateString()}\n                </div>\n                <div className=\"text-sm text-gray-600\">Member Since</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-orange-600\">\n                  {user.is_active ? 'Active' : 'Inactive'}\n                </div>\n                <div className=\"text-sm text-gray-600\">Status</div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Recent Activity */}\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <Activity className=\"w-5 h-5 mr-2\" />\n              Recent Activity\n            </h3>\n            {loading ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"w-6 h-6 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n                <span className=\"ml-2 text-gray-600\">Loading activities...</span>\n              </div>\n            ) : activities.length > 0 ? (\n              <div className=\"space-y-3\">\n                {activities.slice(0, 10).map((activity) => (\n                  <div key={activity.id} className=\"flex items-start space-x-3 p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex-shrink-0 mt-1\">\n                      {getActivityIcon(activity.action)}\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {formatActivityAction(activity)}\n                      </div>\n                      {activity.details && (\n                        <div className=\"text-xs text-gray-600 mt-1\">\n                          {Object.entries(activity.details).map(([key, value]) => (\n                            <span key={key} className=\"mr-3\">\n                              {key}: {String(value)}\n                            </span>\n                          ))}\n                        </div>\n                      )}\n                      <div className=\"text-xs text-gray-500 mt-1 flex items-center\">\n                        <Clock className=\"w-3 h-3 mr-1\" />\n                        {new Date(activity.created_at).toLocaleString()}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-8 text-gray-500\">\n                <Activity className=\"w-12 h-12 mx-auto mb-3 text-gray-400\" />\n                <p>No recent activity found</p>\n              </div>\n            )}\n          </Card>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"space-y-6\">\n          {/* Quick Actions */}\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h3>\n            <div className=\"space-y-2\">\n              {state.currentUser?.role === 'admin' && (\n                <>\n                  <Button\n                    variant=\"outline\"\n                    className=\"w-full justify-start\"\n                    disabled\n                  >\n                    <Mail className=\"w-4 h-4 mr-2\" />\n                    Send Email\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    className=\"w-full justify-start\"\n                    disabled\n                  >\n                    <Shield className=\"w-4 h-4 mr-2\" />\n                    Reset Password\n                  </Button>\n                </>\n              )}\n              {canDelete && (\n                <Button\n                  variant=\"outline\"\n                  onClick={onDelete}\n                  className=\"w-full justify-start text-red-600 hover:text-red-700 hover:bg-red-50\"\n                >\n                  <Trash2 className=\"w-4 h-4 mr-2\" />\n                  Delete User\n                </Button>\n              )}\n            </div>\n          </Card>\n\n          {/* User Timeline */}\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Timeline</h3>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                  <UserCheck className=\"w-4 h-4 text-blue-600\" />\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-900\">Account Created</p>\n                  <p className=\"text-xs text-gray-500\">\n                    {new Date(user.created_at).toLocaleDateString()}\n                  </p>\n                </div>\n              </div>\n              {user.last_login && (\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\n                    <Activity className=\"w-4 h-4 text-green-600\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900\">Last Login</p>\n                    <p className=\"text-xs text-gray-500\">\n                      {new Date(user.last_login).toLocaleDateString()}\n                    </p>\n                  </div>\n                </div>\n              )}\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center\">\n                  <Calendar className=\"w-4 h-4 text-purple-600\" />\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-900\">Last Updated</p>\n                  <p className=\"text-xs text-gray-500\">\n                    {new Date(user.updated_at).toLocaleDateString()}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2794, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/users/UserActivityLog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { UserActivity, User } from '@/types/index';\nimport { userService } from '@/services/userService';\nimport { \n  Activity, \n  Search, \n  Filter, \n  Download, \n  Calendar,\n  Clock,\n  User as UserIcon,\n  Eye,\n  Edit,\n  Trash2,\n  Plus,\n  LogIn,\n  LogOut,\n  Settings,\n  AlertCircle,\n  CheckCircle,\n  XCircle\n} from 'lucide-react';\n\ninterface UserActivityLogProps {\n  userId?: string;\n  showUserColumn?: boolean;\n  maxHeight?: string;\n}\n\n// Mock activity data - in a real app, this would come from an API\nconst mockActivities: UserActivity[] = [\n  {\n    id: '1',\n    user_id: 'user1',\n    action: 'login',\n    resource_type: 'session',\n    details: { ip_address: '192.168.1.1', user_agent: 'Chrome/91.0' },\n    ip_address: '192.168.1.1',\n    user_agent: 'Mozilla/5.0 (Chrome)',\n    created_at: new Date('2024-01-15T10:30:00'),\n  },\n  {\n    id: '2',\n    user_id: 'user1',\n    action: 'create',\n    resource_type: 'job',\n    resource_id: 'job-123',\n    details: { job_title: 'Software Engineer', company: 'Tech Corp' },\n    created_at: new Date('2024-01-15T11:45:00'),\n  },\n  {\n    id: '3',\n    user_id: 'user2',\n    action: 'update',\n    resource_type: 'candidate',\n    resource_id: 'candidate-456',\n    details: { field: 'status', old_value: 'new', new_value: 'reviewed' },\n    created_at: new Date('2024-01-15T14:20:00'),\n  },\n  {\n    id: '4',\n    user_id: 'user1',\n    action: 'delete',\n    resource_type: 'job',\n    resource_id: 'job-789',\n    details: { job_title: 'Marketing Manager' },\n    created_at: new Date('2024-01-15T16:10:00'),\n  },\n  {\n    id: '5',\n    user_id: 'user3',\n    action: 'view',\n    resource_type: 'report',\n    resource_id: 'report-001',\n    details: { report_type: 'candidate_summary' },\n    created_at: new Date('2024-01-16T09:15:00'),\n  },\n  {\n    id: '6',\n    user_id: 'user2',\n    action: 'logout',\n    resource_type: 'session',\n    details: { session_duration: '2h 30m' },\n    created_at: new Date('2024-01-16T12:45:00'),\n  }\n];\n\nexport function UserActivityLog({ userId, showUserColumn = true, maxHeight = \"600px\" }: UserActivityLogProps) {  const [activities, setActivities] = useState<UserActivity[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [actionFilter, setActionFilter] = useState('all');\n  const [dateFilter, setDateFilter] = useState('all');\n\n  const loadData = useCallback(async () => {\n    try {\n      setLoading(true);\n      \n      // Load users for user mapping\n      const usersData = await userService.getAll();\n      setUsers(usersData);\n      \n      // Simulate API call for activities\n      setTimeout(() => {\n        let filteredActivities = [...mockActivities];\n        \n        if (userId) {\n          filteredActivities = filteredActivities.filter(activity => activity.user_id === userId);        }\n        \n        // Add user data to activities\n        const activitiesWithUsers = filteredActivities.map(activity => ({\n          ...activity,\n          user: usersData.find(u => u.id === activity.user_id)\n        }));\n        \n        setActivities(activitiesWithUsers);\n        setLoading(false);\n      }, 500);\n    } catch (error) {\n      console.error('Failed to load activity data:', error);\n      setLoading(false);\n    }\n  }, [userId]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const getActionIcon = (action: string) => {\n    switch (action.toLowerCase()) {\n      case 'login': return <LogIn className=\"w-4 h-4 text-green-600\" />;\n      case 'logout': return <LogOut className=\"w-4 h-4 text-gray-600\" />;\n      case 'create': return <Plus className=\"w-4 h-4 text-blue-600\" />;\n      case 'update': return <Edit className=\"w-4 h-4 text-yellow-600\" />;\n      case 'delete': return <Trash2 className=\"w-4 h-4 text-red-600\" />;\n      case 'view': return <Eye className=\"w-4 h-4 text-purple-600\" />;\n      case 'settings': return <Settings className=\"w-4 h-4 text-gray-600\" />;\n      default: return <Activity className=\"w-4 h-4 text-gray-600\" />;\n    }\n  };\n\n  const getActionColor = (action: string) => {\n    switch (action.toLowerCase()) {\n      case 'login': return 'bg-green-100 text-green-800';\n      case 'logout': return 'bg-gray-100 text-gray-800';\n      case 'create': return 'bg-blue-100 text-blue-800';\n      case 'update': return 'bg-yellow-100 text-yellow-800';\n      case 'delete': return 'bg-red-100 text-red-800';\n      case 'view': return 'bg-purple-100 text-purple-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatActivityDescription = (activity: UserActivity) => {\n    const action = activity.action.charAt(0).toUpperCase() + activity.action.slice(1);\n    const resource = activity.resource_type;\n    const resourceId = activity.resource_id ? ` (${activity.resource_id})` : '';\n    \n    if (activity.details) {\n      switch (activity.action) {\n        case 'create':\n          if (activity.details.job_title) {\n            return `Created job: ${activity.details.job_title}`;\n          }\n          break;\n        case 'update':\n          if (activity.details.field && activity.details.old_value && activity.details.new_value) {\n            return `Updated ${activity.details.field} from \"${activity.details.old_value}\" to \"${activity.details.new_value}\"`;\n          }\n          break;\n        case 'login':\n          return `Logged in from ${activity.details.ip_address || 'unknown IP'}`;\n        case 'logout':\n          if (activity.details.session_duration) {\n            return `Logged out after ${activity.details.session_duration}`;\n          }\n          break;\n      }\n    }\n    \n    return `${action} ${resource}${resourceId}`;\n  };\n\n  const filteredActivities = activities.filter(activity => {\n    const matchesSearch = \n      activity.action.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      activity.resource_type.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      (activity.user?.full_name || '').toLowerCase().includes(searchQuery.toLowerCase()) ||\n      (activity.resource_id || '').toLowerCase().includes(searchQuery.toLowerCase());\n\n    const matchesAction = actionFilter === 'all' || activity.action === actionFilter;\n\n    const matchesDate = (() => {\n      if (dateFilter === 'all') return true;\n      \n      const activityDate = new Date(activity.created_at);\n      const now = new Date();\n      \n      switch (dateFilter) {\n        case 'today':\n          return activityDate.toDateString() === now.toDateString();\n        case 'week':\n          const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n          return activityDate >= weekAgo;\n        case 'month':\n          const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n          return activityDate >= monthAgo;\n        default:\n          return true;\n      }\n    })();\n\n    return matchesSearch && matchesAction && matchesDate;\n  });\n\n  const uniqueActions = [...new Set(activities.map(a => a.action))];\n\n  const exportActivities = () => {\n    const csvContent = [\n      ['Timestamp', 'User', 'Action', 'Resource', 'Resource ID', 'IP Address', 'Details'],\n      ...filteredActivities.map(activity => [\n        new Date(activity.created_at).toISOString(),\n        activity.user?.full_name || 'Unknown User',\n        activity.action,\n        activity.resource_type,\n        activity.resource_id || '',\n        activity.ip_address || '',\n        JSON.stringify(activity.details || {})\n      ])\n    ].map(row => row.join(',')).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `user-activity-${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <Card className=\"p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-2\">\n          <Activity className=\"w-5 h-5 text-blue-600\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">User Activity Log</h3>\n          <Badge variant=\"outline\" className=\"ml-2\">\n            {filteredActivities.length} activities\n          </Badge>\n        </div>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={exportActivities}\n          className=\"flex items-center space-x-2\"\n        >\n          <Download className=\"w-4 h-4\" />\n          <span>Export</span>\n        </Button>\n      </div>\n\n      {/* Filters */}\n      <div className=\"flex flex-wrap items-center gap-4 mb-6 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"flex items-center space-x-2\">\n          <Search className=\"w-4 h-4 text-gray-400\" />\n          <Input\n            placeholder=\"Search activities...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"w-64\"\n          />\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <Filter className=\"w-4 h-4 text-gray-400\" />\n          <select\n            value={actionFilter}\n            onChange={(e) => setActionFilter(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"all\">All Actions</option>\n            {uniqueActions.map(action => (\n              <option key={action} value={action}>\n                {action.charAt(0).toUpperCase() + action.slice(1)}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <Calendar className=\"w-4 h-4 text-gray-400\" />\n          <select\n            value={dateFilter}\n            onChange={(e) => setDateFilter(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"all\">All Time</option>\n            <option value=\"today\">Today</option>\n            <option value=\"week\">Last Week</option>\n            <option value=\"month\">Last Month</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Activity List */}\n      <div \n        className=\"space-y-3 overflow-y-auto\"\n        style={{ maxHeight }}\n      >\n        {loading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <div className=\"w-6 h-6 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n            <span className=\"ml-2 text-gray-600\">Loading activities...</span>\n          </div>\n        ) : filteredActivities.length > 0 ? (\n          <>\n            {filteredActivities.map((activity) => (\n              <div key={activity.id} className=\"flex items-start space-x-4 p-4 bg-white border border-gray-200 rounded-lg hover:bg-gray-50\">\n                <div className=\"flex-shrink-0 mt-1\">\n                  {getActionIcon(activity.action)}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center space-x-2 mb-1\">\n                    <Badge className={`${getActionColor(activity.action)} text-xs`}>\n                      {activity.action}\n                    </Badge>\n                    <span className=\"text-xs text-gray-500\">\n                      {activity.resource_type}\n                    </span>\n                    {activity.resource_id && (\n                      <span className=\"text-xs text-gray-400\">\n                        #{activity.resource_id}\n                      </span>\n                    )}\n                  </div>\n                  \n                  <p className=\"text-sm font-medium text-gray-900 mb-1\">\n                    {formatActivityDescription(activity)}\n                  </p>\n                  \n                  {showUserColumn && activity.user && (\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <UserIcon className=\"w-3 h-3 text-gray-400\" />\n                      <span className=\"text-xs text-gray-600\">\n                        {activity.user.full_name} ({activity.user.email})\n                      </span>\n                    </div>\n                  )}\n                  \n                  <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n                    <div className=\"flex items-center space-x-1\">\n                      <Clock className=\"w-3 h-3\" />\n                      <span>{new Date(activity.created_at).toLocaleString()}</span>\n                    </div>\n                    {activity.ip_address && (\n                      <span>IP: {activity.ip_address}</span>\n                    )}\n                  </div>\n                  \n                  {activity.details && Object.keys(activity.details).length > 0 && (\n                    <div className=\"mt-2 text-xs\">\n                      <details className=\"group\">\n                        <summary className=\"cursor-pointer text-blue-600 hover:text-blue-700\">\n                          View details\n                        </summary>\n                        <div className=\"mt-1 p-2 bg-gray-100 rounded text-gray-700\">\n                          <pre className=\"whitespace-pre-wrap text-xs\">\n                            {JSON.stringify(activity.details, null, 2)}\n                          </pre>\n                        </div>\n                      </details>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Activity className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No activities found</h3>\n            <p className=\"text-gray-500\">\n              {searchQuery || actionFilter !== 'all' || dateFilter !== 'all'\n                ? 'Try adjusting your filters to see more activities.'\n                : 'User activities will appear here once they start using the system.'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3582, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/components/users/UserManagement.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Card } from '@/components/ui/card';\nimport { userService } from '@/services/userService';\nimport { User, UserRole, UserStatus } from '@/types/index';\nimport { useAppContext } from '@/contexts/AppContext';\nimport { useToast } from '@/hooks/use-toast';\nimport { AdminGuard } from '@/components/admin/AdminGuard';\nimport { UserDialog } from './UserDialog';\nimport { UserDetails } from './UserDetails';\nimport { UserActivityLog } from './UserActivityLog';\nimport { \n  Plus, \n  Search, \n  User as UserIcon, \n  Shield, \n  Eye, \n  Mail, \n  Calendar,\n  Edit,\n  Trash2,\n  MoreVertical,\n  Filter,\n  Download,\n  UserCheck,\n  AlertCircle,\n  CheckCircle,\n  XCircle,\n  Clock,\n  Activity,\n  Settings\n} from 'lucide-react';\n\nexport function UserManagement() {\n  const { state } = useAppContext();\n  const { toast } = useToast();\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [roleFilter, setRoleFilter] = useState<UserRole | 'all'>('all');  const [statusFilter, setStatusFilter] = useState<UserStatus | 'all'>('all');\n  const [currentView, setCurrentView] = useState<'list' | 'details' | 'activity'>('list');\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [editingUser, setEditingUser] = useState<User | null>(null);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<string | null>(null);\n\n  const loadUsers = useCallback(async () => {\n    try {\n      setLoading(true);\n      const data = await userService.getAll();\n      setUsers(data);\n    } catch (error) {\n      console.error('Failed to load users:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load users. Please refresh the page.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    loadUsers();\n  }, [loadUsers]);\n\n  const handleCreateUser = () => {\n    setEditingUser(null);\n    setIsDialogOpen(true);\n  };\n\n  const handleEditUser = (user: User) => {\n    setEditingUser(user);\n    setIsDialogOpen(true);\n  };\n\n  const handleViewUser = (user: User) => {\n    setSelectedUser(user);\n    setCurrentView('details');\n  };\n  const handleDeleteUser = async (userId: string) => {\n    try {\n      await userService.delete(userId);\n      setUsers(users.filter(u => u.id !== userId));\n      setShowDeleteConfirm(null);\n      \n      // If we're viewing the deleted user, go back to list\n      if (selectedUser?.id === userId) {\n        setCurrentView('list');\n        setSelectedUser(null);\n      }\n      \n      toast({\n        title: \"User deleted\",\n        description: \"User has been successfully deleted.\",\n      });\n    } catch (error) {\n      console.error('Failed to delete user:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete user. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };  const handleSaveUser = (savedUser: User) => {\n    if (editingUser) {\n      // Update existing user\n      setUsers(users.map(u => u.id === savedUser.id ? savedUser : u));\n      toast({\n        title: \"User updated\",\n        description: \"User information has been successfully updated.\",\n      });\n    } else {\n      // Add new user\n      setUsers([...users, savedUser]);\n      toast({\n        title: \"User created\",\n        description: \"New user has been successfully created.\",\n      });\n    }\n    setEditingUser(null);\n    setIsDialogOpen(false); // Close the dialog after saving\n  };\n\n  const filteredUsers = users.filter(user => {\n    const matchesSearch = \n      user.full_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      user.company?.name.toLowerCase().includes(searchQuery.toLowerCase());\n\n    const matchesRole = roleFilter === 'all' || user.role === roleFilter;\n    const matchesStatus = statusFilter === 'all' || (user.status || 'active') === statusFilter;\n\n    return matchesSearch && matchesRole && matchesStatus;\n  });\n\n  const userStats = {\n    total: users.length,\n    active: users.filter(u => u.is_active).length,\n    inactive: users.filter(u => !u.is_active).length,\n    admins: users.filter(u => u.role === 'admin').length,\n    recruiters: users.filter(u => u.role === 'recruiter').length,\n    viewers: users.filter(u => u.role === 'viewer').length\n  };\n\n  const exportUsers = () => {\n    const csvContent = [\n      ['Name', 'Email', 'Role', 'Company', 'Status', 'Last Login', 'Created'],\n      ...filteredUsers.map(user => [\n        user.full_name,\n        user.email,\n        user.role,\n        user.company?.name || '',\n        user.is_active ? 'Active' : 'Inactive',\n        user.last_login ? new Date(user.last_login).toLocaleDateString() : 'Never',\n        new Date(user.created_at).toLocaleDateString()\n      ])\n    ].map(row => row.join(',')).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `users-${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case 'admin': return 'bg-red-100 text-red-800';\n      case 'recruiter': return 'bg-blue-100 text-blue-800';\n      case 'viewer': return 'bg-gray-100 text-gray-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getRoleIcon = (role: string) => {\n    switch (role) {\n      case 'admin': return <Shield className=\"w-4 h-4\" />;\n      case 'recruiter': return <UserIcon className=\"w-4 h-4\" />;\n      case 'viewer': return <Eye className=\"w-4 h-4\" />;\n      default: return <UserIcon className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getStatusIcon = (status?: UserStatus, isActive?: boolean) => {\n    if (!isActive) return <XCircle className=\"w-4 h-4 text-red-600\" />;\n    \n    switch (status) {\n      case 'active': return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\n      case 'inactive': return <XCircle className=\"w-4 h-4 text-gray-600\" />;\n      case 'suspended': return <AlertCircle className=\"w-4 h-4 text-red-600\" />;\n      case 'pending': return <Clock className=\"w-4 h-4 text-yellow-600\" />;\n      default: return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\n    }\n  };\n\n  const getStatusColor = (status?: UserStatus, isActive?: boolean) => {\n    if (!isActive) return 'bg-red-100 text-red-800';\n    \n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'inactive': return 'bg-gray-100 text-gray-800';\n      case 'suspended': return 'bg-red-100 text-red-800';\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\n      default: return 'bg-green-100 text-green-800';\n    }\n  };\n\n  // Show different views based on current state\n  if (currentView === 'details' && selectedUser) {\n    return (\n      <AdminGuard>\n        <UserDetails\n          user={selectedUser}\n          onEdit={() => handleEditUser(selectedUser)}\n          onDelete={() => setShowDeleteConfirm(selectedUser.id)}\n          onBack={() => {\n            setCurrentView('list');\n            setSelectedUser(null);\n          }}\n        />\n        {showDeleteConfirm === selectedUser.id && (\n          <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center p-4\">\n            <Card className=\"p-6 max-w-md mx-auto\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <AlertCircle className=\"w-6 h-6 text-red-600\" />\n                <h3 className=\"text-lg font-semibold\">Delete User</h3>\n              </div>\n              <p className=\"text-gray-600 mb-6\">\n                Are you sure you want to delete <strong>{selectedUser.full_name}</strong>? \n                This action cannot be undone.\n              </p>\n              <div className=\"flex justify-end space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setShowDeleteConfirm(null)}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  onClick={() => handleDeleteUser(selectedUser.id)}\n                  className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n                >\n                  Delete\n                </Button>\n              </div>\n            </Card>\n          </div>\n        )}\n      </AdminGuard>\n    );\n  }\n\n  if (currentView === 'activity') {\n    return (\n      <AdminGuard>\n        <div className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setCurrentView('list')}\n                className=\"flex items-center space-x-2\"\n              >\n                <UserIcon className=\"w-4 h-4\" />\n                <span>Back to Users</span>\n              </Button>\n              <h1 className=\"text-3xl font-bold\">User Activity</h1>\n            </div>\n          </div>\n          <UserActivityLog showUserColumn={true} />\n        </div>\n      </AdminGuard>\n    );\n  }\n\n  if (loading) {\n    return (\n      <AdminGuard>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"w-6 h-6 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n          <span className=\"ml-2 text-gray-600\">Loading users...</span>\n        </div>\n      </AdminGuard>\n    );\n  }\n\n  return (\n    <AdminGuard>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n                      <div className=\"mb-6\">\n              <h1 className=\"text-2xl font-bold text-gray-900\">User Management</h1>\n              <p className=\"text-gray-600\">Manage user accounts, roles, and permissions</p>\n            </div>\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"outline\"\n              onClick={exportUsers}\n              className=\"flex items-center space-x-2\"\n            >\n              <Download className=\"w-4 h-4\" />\n              <span>Export</span>\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={() => setCurrentView('activity')}\n              className=\"flex items-center space-x-2\"\n            >\n              <Activity className=\"w-4 h-4\" />\n              <span>Activity Log</span>\n            </Button>\n            <Button \n              onClick={handleCreateUser}\n              className=\"flex items-center space-x-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              <span>Add User</span>\n            </Button>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n          <Card className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <UserIcon className=\"w-5 h-5 text-blue-600\" />\n              <div>\n                <p className=\"text-2xl font-bold text-blue-600\">{userStats.total}</p>\n                <p className=\"text-xs text-gray-600\">Total Users</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"w-5 h-5 text-green-600\" />\n              <div>\n                <p className=\"text-2xl font-bold text-green-600\">{userStats.active}</p>\n                <p className=\"text-xs text-gray-600\">Active</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <XCircle className=\"w-5 h-5 text-red-600\" />\n              <div>\n                <p className=\"text-2xl font-bold text-red-600\">{userStats.inactive}</p>\n                <p className=\"text-xs text-gray-600\">Inactive</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Shield className=\"w-5 h-5 text-red-600\" />\n              <div>\n                <p className=\"text-2xl font-bold text-red-600\">{userStats.admins}</p>\n                <p className=\"text-xs text-gray-600\">Admins</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <UserIcon className=\"w-5 h-5 text-blue-600\" />\n              <div>\n                <p className=\"text-2xl font-bold text-blue-600\">{userStats.recruiters}</p>\n                <p className=\"text-xs text-gray-600\">Recruiters</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Eye className=\"w-5 h-5 text-gray-600\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-600\">{userStats.viewers}</p>\n                <p className=\"text-xs text-gray-600\">Viewers</p>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Filters */}\n        <Card className=\"p-4\">\n          <div className=\"flex flex-wrap items-center gap-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Search className=\"w-4 h-4 text-gray-400\" />\n              <Input\n                placeholder=\"Search users...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"w-64\"\n              />\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <Filter className=\"w-4 h-4 text-gray-400\" />\n              <select\n                value={roleFilter}\n                onChange={(e) => setRoleFilter(e.target.value as UserRole | 'all')}\n                className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"all\">All Roles</option>\n                <option value=\"admin\">Admin</option>\n                <option value=\"recruiter\">Recruiter</option>\n                <option value=\"viewer\">Viewer</option>\n              </select>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Settings className=\"w-4 h-4 text-gray-400\" />\n              <select\n                value={statusFilter}\n                onChange={(e) => setStatusFilter(e.target.value as UserStatus | 'all')}\n                className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"all\">All Status</option>\n                <option value=\"active\">Active</option>\n                <option value=\"inactive\">Inactive</option>\n                <option value=\"suspended\">Suspended</option>\n                <option value=\"pending\">Pending</option>\n              </select>\n            </div>\n          </div>\n        </Card>\n\n        {/* Users Table */}\n        <Card className=\"overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h2 className=\"text-lg font-semibold\">Users ({filteredUsers.length})</h2>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    User\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Company\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Role\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Last Login\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Created\n                  </th>\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredUsers.map((user) => (\n                  <tr key={user.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                          <UserIcon className=\"w-5 h-5 text-blue-600\" />\n                        </div>\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-gray-900\">{user.full_name}</div>\n                          <div className=\"text-sm text-gray-500 flex items-center\">\n                            <Mail className=\"w-3 h-3 mr-1\" />\n                            {user.email}\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{user.company?.name}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center gap-1 px-2 py-1 text-xs font-semibold rounded-full ${getRoleColor(user.role)}`}>\n                        {getRoleIcon(user.role)}\n                        {user.role}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center gap-1 px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(user.status, user.is_active)}`}>\n                        {getStatusIcon(user.status, user.is_active)}\n                        {user.is_active ? (user.status || 'active') : 'inactive'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      <div className=\"flex items-center\">\n                        <Clock className=\"w-3 h-3 mr-1\" />\n                        {user.last_login \n                          ? new Date(user.last_login).toLocaleDateString()\n                          : 'Never'\n                        }\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      <div className=\"flex items-center\">\n                        <Calendar className=\"w-3 h-3 mr-1\" />\n                        {user.created_at instanceof Date \n                          ? user.created_at.toLocaleDateString()\n                          : new Date(user.created_at).toLocaleDateString()\n                        }\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex justify-end space-x-2\">\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          onClick={() => handleViewUser(user)}\n                        >\n                          <Eye className=\"w-3 h-3 mr-1\" />\n                          View\n                        </Button>\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          onClick={() => handleEditUser(user)}\n                        >\n                          <Edit className=\"w-3 h-3 mr-1\" />\n                          Edit\n                        </Button>\n                        {state.currentUser?.role === 'admin' && user.id !== state.currentUser.id && (\n                          <Button \n                            variant=\"outline\" \n                            size=\"sm\"\n                            onClick={() => setShowDeleteConfirm(user.id)}\n                            className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n                          >\n                            <Trash2 className=\"w-3 h-3 mr-1\" />\n                            Delete\n                          </Button>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card>\n\n        {filteredUsers.length === 0 && (\n          <div className=\"text-center py-12\">\n            <UserIcon className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No users found</h3>\n            <p className=\"text-gray-500\">\n              {searchQuery || roleFilter !== 'all' || statusFilter !== 'all'\n                ? 'Try adjusting your filters to see more users.'\n                : 'Get started by adding your first user.'\n              }\n            </p>\n            <Button className=\"mt-4\" onClick={handleCreateUser}>\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Add User\n            </Button>\n          </div>\n        )}\n\n        {/* User Dialog */}\n        <UserDialog\n          isOpen={isDialogOpen}\n          onClose={() => setIsDialogOpen(false)}\n          user={editingUser}\n          onSave={handleSaveUser}\n        />\n\n        {/* Delete Confirmation */}\n        {showDeleteConfirm && !selectedUser && (\n          <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center p-4\">\n            <Card className=\"p-6 max-w-md mx-auto\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <AlertCircle className=\"w-6 h-6 text-red-600\" />\n                <h3 className=\"text-lg font-semibold\">Delete User</h3>\n              </div>\n              <p className=\"text-gray-600 mb-6\">\n                Are you sure you want to delete this user? This action cannot be undone.\n              </p>\n              <div className=\"flex justify-end space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setShowDeleteConfirm(null)}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  onClick={() => handleDeleteUser(showDeleteConfirm)}\n                  className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n                >\n                  Delete\n                </Button>\n              </div>\n            </Card>\n          </div>\n        )}\n      </div>\n    </AdminGuard>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5200, "column": 0}, "map": {"version":3,"sources":["file:///D:/cv-matching-db/frontend/src/app/users/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { UserManagement } from '@/components/users/UserManagement';\n\nexport default function UsersPage() {\n  return (\n      <UserManagement />\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACI,8OAAC,6IAAA,CAAA,iBAAc;;;;;AAErB","debugId":null}}]
}